<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="PostcodeAnywhere2" xmlns:s1="PostcodeAnywhere2/AbstractTypes" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" targetNamespace="PostcodeAnywhere2" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="PostcodeAnywhere2">
      <s:import namespace="http://www.w3.org/2001/XMLSchema" />
      <s:element name="Browse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="BrowseResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="BrowseResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="InterimResults">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="IsError" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="ErrorNumber" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorMessage" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Results" type="tns:ArrayOfInterimResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfInterimResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="InterimResult" type="tns:InterimResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="InterimResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="Id" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="Browse_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Browse_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Browse_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByArea">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Area" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByAreaResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByAreaResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByArea_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Area" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByArea_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByArea_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByPostcode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByPostcodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByPostcodeResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByPostcode_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByPostcode_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByPostcode_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByPostcode_Combined">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:simpleType name="enLanguage">
        <s:restriction base="s:string">
          <s:enumeration value="enLanguageEnglish" />
          <s:enumeration value="enLanguageWelsh" />
        </s:restriction>
      </s:simpleType>
      <s:simpleType name="enContentType">
        <s:restriction base="s:string">
          <s:enumeration value="enContentStandardAddress" />
          <s:enumeration value="enContentExpandedAddress" />
          <s:enumeration value="enContentGeographicAddress" />
          <s:enumeration value="enContentGeographicOnly" />
        </s:restriction>
      </s:simpleType>
      <s:element name="ByPostcode_CombinedResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByPostcode_CombinedResult" type="tns:CombinedResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="CombinedResults">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="IsError" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="ErrorNumber" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorMessage" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="ResultType" type="tns:enResultType" />
          <s:element minOccurs="1" maxOccurs="1" name="InterimResults" type="tns:InterimResults" />
          <s:element minOccurs="1" maxOccurs="1" name="AddressResults" type="tns:AddressResults" />
        </s:sequence>
      </s:complexType>
      <s:simpleType name="enResultType">
        <s:restriction base="s:string">
          <s:enumeration value="enResultTypeError" />
          <s:enumeration value="enResultTypeStreetList" />
          <s:enumeration value="enResultTypePropertyList" />
          <s:enumeration value="enResultTypeAddresses" />
        </s:restriction>
      </s:simpleType>
      <s:complexType name="AddressResults">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="IsError" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="ErrorNumber" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorMessage" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Results" type="tns:ArrayOfAddress" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfAddress">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="Address" type="tns:Address" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="Address">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="Id" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="OrganisationName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DepartmentName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Line1" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Line2" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Line3" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Line4" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Line5" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="PostTown" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="County" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Mailsort" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Barcode" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="IsResidential" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="IsSmallOrganisation" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="IsLargeOrganisation" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="RawData" type="tns:AddressRawData" />
          <s:element minOccurs="1" maxOccurs="1" name="GeographicData" type="tns:AddressGeographicData" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="AddressRawData">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="DeliveryPointSuffix" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Checksum" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="NameOrNumber" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="SubBuildingName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="BuildingName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="BuildingNumber" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ThoroughfareName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ThoroughfareDescriptor" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DependentThoroughfareName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DependentThoroughfareDescriptor" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DoubleDependentLocality" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DependentLocality" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="POBoxNumber" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="NumberOfHouseholds" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ConcatenationOperator" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="BuildingNameOrNumber" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="BuildingFlat" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="AddressGeographicData">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="GridEastM" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="GridNorthM" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="DistrictCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="WardCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="NHSCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="NHSRegionCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CountyCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="CountryCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="WardStatus" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="WardName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DistrictName" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Objective2" type="s:boolean" />
          <s:element minOccurs="0" maxOccurs="1" name="Objective2Region" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Transitional" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="Longitude" type="s:double" />
          <s:element minOccurs="1" maxOccurs="1" name="Latitude" type="s:double" />
          <s:element minOccurs="0" maxOccurs="1" name="OSReference" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="WGS84Longitude" type="s:double" />
          <s:element minOccurs="1" maxOccurs="1" name="WGS84Latitude" type="s:double" />
        </s:sequence>
      </s:complexType>
      <s:element name="ByPostcodeFiltered">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Building" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByPostcodeFilteredResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByPostcodeFilteredResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByPostcodeFiltered_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Building" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByPostcodeFiltered_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByPostcodeFiltered_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByCoordinates">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="EastingMin" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="EastingMax" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="NorthingMin" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="NorthingMax" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="Options" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByCoordinatesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByCoordinatesResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByCoordinates_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="EastingMin" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="EastingMax" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="NorthingMin" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="NorthingMax" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="Options" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByCoordinates_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByCoordinates_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByOutcode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Outcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByOutcodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByOutcodeResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByOutcode_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Outcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByOutcode_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByOutcode_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByOrganisation">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Organisation" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Fuzzy" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByOrganisationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByOrganisationResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByOrganisation_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Organisation" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Fuzzy" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByOrganisation_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByOrganisation_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByOrganisation_Combined">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Organisation" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Fuzzy" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByOrganisation_CombinedResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByOrganisation_CombinedResult" type="tns:CombinedResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Street" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Fuzzy" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByStreetResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreet_Dataset">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Street" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Fuzzy" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreet_DatasetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByStreet_DatasetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreetFiltered">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Street" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Building" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreetFilteredResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByStreetFilteredResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreetFiltered_Dataset">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Street" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Building" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreetFiltered_DatasetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByStreetFiltered_DatasetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreet_Combined">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Street" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Fuzzy" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreet_CombinedResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByStreet_CombinedResult" type="tns:CombinedResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByBuilding">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Building" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="JustBuildings" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByBuildingResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByBuildingResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByBuilding_Dataset">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Building" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="JustBuildings" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByBuilding_DatasetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByBuilding_DatasetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByBuilding_Combined">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Building" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="JustBuildings" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByBuilding_CombinedResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByBuilding_CombinedResult" type="tns:CombinedResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreetKey">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="StreetKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreetKeyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByStreetKeyResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreetKey_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="StreetKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreetKey_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByStreetKey_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreetKey_Combined">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="StreetKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByStreetKey_CombinedResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByStreetKey_CombinedResult" type="tns:CombinedResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByLocalityKey">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="LocalityKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByLocalityKeyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByLocalityKeyResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByLocalityKey_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="LocalityKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByLocalityKey_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByLocalityKey_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByLocation">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Location" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByLocationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByLocationResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByLocation_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Location" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByLocation_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByLocation_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Location">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Id" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LocationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="LocationResult" type="tns:LocationResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="LocationResults">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="IsError" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="ErrorNumber" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorMessage" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Results" type="tns:ArrayOfLocationResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfLocationResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="LocationResult" type="tns:LocationResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="LocationResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="GridEastM" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="GridNorthM" type="s:int" />
        </s:sequence>
      </s:complexType>
      <s:element name="Location_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Id" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Location_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Location_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByFreeText">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="FreeText" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByFreeTextResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByFreeTextResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByFreeText_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="FreeText" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByFreeText_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByFreeText_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByFreeText_Combined">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="FreeText" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByFreeText_CombinedResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByFreeText_CombinedResult" type="tns:CombinedResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FetchAddress_Simple">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Id" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Language" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="ContentType" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FetchAddress_SimpleResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FetchAddress_SimpleResult" type="tns:AddressResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FetchAddress">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Id" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FetchAddressResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FetchAddressResult" type="tns:AddressResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FastAddress">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Building" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FastAddressResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FastAddressResult" type="tns:AddressResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FetchAddress_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Id" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FetchAddress_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="FetchAddress_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FastAddress_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Building" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FastAddress_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="FastAddress_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Distance">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Origin" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Destination" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DistanceResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="DistanceResult" type="s:double" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestPostcode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="Easting" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Northing" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Latitude" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="Longitude" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="Datum" type="tns:enDatum" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:simpleType name="enDatum">
        <s:restriction base="s:string">
          <s:enumeration value="enDatumWGS84" />
          <s:enumeration value="enDatumOSGB1936" />
        </s:restriction>
      </s:simpleType>
      <s:element name="NearestPostcodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="NearestPostcodeResult" type="tns:NearestResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="NearestResults">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="IsError" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="ErrorNumber" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorMessage" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Results" type="tns:ArrayOfNearestResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfNearestResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="NearestResult" type="tns:NearestResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="NearestResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="OriginPostcode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DestinationPostcode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Distance" type="s:double" />
          <s:element minOccurs="1" maxOccurs="1" name="GridEastM" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="GridNorthM" type="s:int" />
        </s:sequence>
      </s:complexType>
      <s:element name="NearestPostcode_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="Easting" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Northing" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Latitude" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="Longitude" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="Datum" type="tns:enDatum" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestPostcode_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="NearestPostcode_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Nearest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Origin" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Destinations" type="tns:ArrayOfString" />
            <s:element minOccurs="1" maxOccurs="1" name="Units" type="tns:enUnitType" />
            <s:element minOccurs="1" maxOccurs="1" name="Items" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfString">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:simpleType name="enUnitType">
        <s:restriction base="s:string">
          <s:enumeration value="enUnitTypeMiles" />
          <s:enumeration value="enUnitTypeMeters" />
          <s:enumeration value="enUnitTypeKilometers" />
        </s:restriction>
      </s:simpleType>
      <s:element name="NearestResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="NearestResult" type="tns:NearestResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Nearest_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Origin" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Destinations" type="tns:ArrayOfString" />
            <s:element minOccurs="1" maxOccurs="1" name="Units" type="tns:enUnitType" />
            <s:element minOccurs="1" maxOccurs="1" name="Items" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Nearest_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Nearest_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StoredNearest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Origin" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Units" type="tns:enUnitType" />
            <s:element minOccurs="1" maxOccurs="1" name="Items" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StoredNearestResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="StoredNearestResult" type="tns:NearestResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StoredNearest_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Origin" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Units" type="tns:enUnitType" />
            <s:element minOccurs="1" maxOccurs="1" name="Items" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StoredNearest_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="StoredNearest_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestRadial">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Origin" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Destinations" type="tns:ArrayOfString" />
            <s:element minOccurs="1" maxOccurs="1" name="Units" type="tns:enUnitType" />
            <s:element minOccurs="1" maxOccurs="1" name="Radius" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Items" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestRadialResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="NearestRadialResult" type="tns:NearestResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestRadial_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Origin" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Destinations" type="tns:ArrayOfString" />
            <s:element minOccurs="1" maxOccurs="1" name="Units" type="tns:enUnitType" />
            <s:element minOccurs="1" maxOccurs="1" name="Radius" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Items" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestRadial_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="NearestRadial_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StoredNearestRadial">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Origin" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Units" type="tns:enUnitType" />
            <s:element minOccurs="1" maxOccurs="1" name="Radius" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Items" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StoredNearestRadialResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="StoredNearestRadialResult" type="tns:NearestResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StoredNearestRadial_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Origin" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="Units" type="tns:enUnitType" />
            <s:element minOccurs="1" maxOccurs="1" name="Radius" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Items" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StoredNearestRadial_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="StoredNearestRadial_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Changes">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="StartDate" type="s:dateTime" />
            <s:element minOccurs="0" maxOccurs="1" name="EndDate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ChangesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ChangesResult" type="tns:ChangesResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ChangesResults">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="IsError" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="ErrorNumber" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorMessage" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Results" type="tns:ArrayOfChangesResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfChangesResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="ChangesResult" type="tns:ChangesResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ChangesResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="ChangeDate" type="s:dateTime" />
          <s:element minOccurs="1" maxOccurs="1" name="ChangeType" type="tns:enChangeType" />
          <s:element minOccurs="1" maxOccurs="1" name="ChangeReason" type="tns:enChangeReason" />
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:simpleType name="enChangeType">
        <s:restriction base="s:string">
          <s:enumeration value="enChangeTypeAddition" />
          <s:enumeration value="enChangeTypeDeletion" />
          <s:enumeration value="enChangeTypeChange" />
        </s:restriction>
      </s:simpleType>
      <s:simpleType name="enChangeReason">
        <s:restriction base="s:string">
          <s:enumeration value="enChangeReasonNewProperty" />
          <s:enumeration value="enChangeReasonErrorCorrection" />
          <s:enumeration value="enChangeReasonDemolition" />
          <s:enumeration value="enChangeReasonCodingRevision" />
          <s:enumeration value="enChangeReasonOrganisationChange" />
          <s:enumeration value="enChangeReasonStatusChange" />
          <s:enumeration value="enChangeReasonLargeUserClosedDown" />
          <s:enumeration value="enChangeReasonBuildingDetailsChanged" />
          <s:enumeration value="enChangeReasonLargeUserAddressChanged" />
          <s:enumeration value="enChangeReasonUnknown" />
        </s:restriction>
      </s:simpleType>
      <s:element name="Changes_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="StartDate" type="s:dateTime" />
            <s:element minOccurs="0" maxOccurs="1" name="EndDate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Changes_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Changes_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Cleanse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Street" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Organisation" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Building" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CleanseResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="CleanseResult" type="tns:CleanseResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="CleanseResults">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="IsError" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="ErrorNumber" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorMessage" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Results" type="tns:ArrayOfCleanseResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfCleanseResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="CleanseResult" type="tns:CleanseResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="CleanseResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="Id" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Confidence" type="s:double" />
        </s:sequence>
      </s:complexType>
      <s:element name="Cleanse_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Street" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Organisation" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Building" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Cleanse_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Cleanse_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="BatchCleanse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Addresses" type="tns:ArrayOfString" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="BatchCleanseResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="BatchCleanseResult" type="tns:AddressResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="BatchCleanse_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Addresses" type="tns:ArrayOfString" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="BatchCleanse_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="BatchCleanse_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="BatchFetch">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="IDs" type="tns:ArrayOfString" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="BatchFetchResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="BatchFetchResult" type="tns:AddressResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="BatchFetch_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="IDs" type="tns:ArrayOfString" />
            <s:element minOccurs="1" maxOccurs="1" name="Language" type="tns:enLanguage" />
            <s:element minOccurs="1" maxOccurs="1" name="ContentType" type="tns:enContentType" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="BatchFetch_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="BatchFetch_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsByPostcode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsByPostcodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="StatisticsByPostcodeResult" type="tns:StatisticsResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="StatisticsResults">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="IsError" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="ErrorNumber" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorMessage" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Results" type="tns:ArrayOfStatisticsResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfStatisticsResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="StatisticsResult" type="tns:StatisticsResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="StatisticsResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="ResidentialTotal" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="SmallOrganisationTotal" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="LargeOrganisationTotal" type="s:int" />
        </s:sequence>
      </s:complexType>
      <s:element name="StatisticsByPostcode_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsByPostcode_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="StatisticsByPostcode_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsByOutcode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Outcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsByOutcodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="StatisticsByOutcodeResult" type="tns:StatisticsResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsByOutcode_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Outcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsByOutcode_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="StatisticsByOutcode_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsBySector">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Sector" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsBySectorResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="StatisticsBySectorResult" type="tns:StatisticsResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsBySector_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Sector" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsBySector_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="StatisticsBySector_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsByStreetKey">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="StreetKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsByStreetKeyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="StatisticsByStreetKeyResult" type="tns:StatisticsResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsByStreetKey_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="StreetKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StatisticsByStreetKey_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="StatisticsByStreetKey_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestOutcodes">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="Easting" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Northing" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Latitude" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="Longitude" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="Datum" type="tns:enDatum" />
            <s:element minOccurs="1" maxOccurs="1" name="Radius" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Items" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestOutcodesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="NearestOutcodesResult" type="tns:NearestResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestOutcodes_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="Easting" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Northing" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Latitude" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="Longitude" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="Datum" type="tns:enDatum" />
            <s:element minOccurs="1" maxOccurs="1" name="Radius" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Items" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestOutcodes_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="NearestOutcodes_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestSectors">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="Easting" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Northing" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Latitude" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="Longitude" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="Datum" type="tns:enDatum" />
            <s:element minOccurs="1" maxOccurs="1" name="Radius" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Items" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestSectorsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="NearestSectorsResult" type="tns:NearestResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestSectors_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="Easting" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Northing" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Latitude" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="Longitude" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="Datum" type="tns:enDatum" />
            <s:element minOccurs="1" maxOccurs="1" name="Radius" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="Items" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="NearestSectors_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="NearestSectors_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByPoBox">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PoBox" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByPoBoxResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ByPoBoxResult" type="tns:InterimResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByPoBox_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="PoBox" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Town" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ByPoBox_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ByPoBox_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GeocodePostcode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Building" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Accuracy" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GeocodePostcodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GeocodePostcodeResult" type="tns:GeocodeResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="GeocodeResults">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="IsError" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="ErrorNumber" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="ErrorMessage" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Results" type="tns:ArrayOfGeocodeResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfGeocodeResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="GeocodeResult" type="tns:GeocodeResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="GeocodeResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="Location" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="GridEastM" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="GridNorthM" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="Longitude" type="s:double" />
          <s:element minOccurs="1" maxOccurs="1" name="Latitude" type="s:double" />
          <s:element minOccurs="0" maxOccurs="1" name="OsReference" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Wgs84Longitude" type="s:double" />
          <s:element minOccurs="1" maxOccurs="1" name="Wgs84Latitude" type="s:double" />
        </s:sequence>
      </s:complexType>
      <s:element name="GeocodePostcode_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Postcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Building" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Accuracy" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GeocodePostcode_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GeocodePostcode_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GeocodeAddressId">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Id" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Accuracy" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GeocodeAddressIdResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GeocodeAddressIdResult" type="tns:GeocodeResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GeocodeAddressId_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Id" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Accuracy" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GeocodeAddressId_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GeocodeAddressId_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GeocodeAddress">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Accuracy" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GeocodeAddressResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GeocodeAddressResult" type="tns:GeocodeResults" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GeocodeAddress_DataSet">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Accuracy" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AccountCode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GeocodeAddress_DataSetResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GeocodeAddress_DataSetResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="InterimResults" type="tns:InterimResults" />
      <s:element name="DataSet" nillable="true">
        <s:complexType>
          <s:sequence>
            <s:element ref="s:schema" />
            <s:any />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CombinedResults" type="tns:CombinedResults" />
      <s:element name="LocationResults" type="tns:LocationResults" />
      <s:element name="AddressResults" type="tns:AddressResults" />
      <s:element name="double" type="s:double" />
      <s:element name="NearestResults" type="tns:NearestResults" />
      <s:element name="ChangesResults" type="tns:ChangesResults" />
      <s:element name="CleanseResults" type="tns:CleanseResults" />
      <s:element name="StatisticsResults" type="tns:StatisticsResults" />
      <s:element name="GeocodeResults" type="tns:GeocodeResults" />
    </s:schema>
    <s:schema targetNamespace="PostcodeAnywhere2/AbstractTypes">
      <s:import namespace="http://schemas.xmlsoap.org/soap/encoding/" />
      <s:complexType name="StringArray">
        <s:complexContent mixed="false">
          <s:restriction base="soapenc:Array">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="String" type="s:string" />
            </s:sequence>
          </s:restriction>
        </s:complexContent>
      </s:complexType>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="BrowseSoapIn">
    <wsdl:part name="parameters" element="tns:Browse" />
  </wsdl:message>
  <wsdl:message name="BrowseSoapOut">
    <wsdl:part name="parameters" element="tns:BrowseResponse" />
  </wsdl:message>
  <wsdl:message name="Browse_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:Browse_DataSet" />
  </wsdl:message>
  <wsdl:message name="Browse_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:Browse_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="ByAreaSoapIn">
    <wsdl:part name="parameters" element="tns:ByArea" />
  </wsdl:message>
  <wsdl:message name="ByAreaSoapOut">
    <wsdl:part name="parameters" element="tns:ByAreaResponse" />
  </wsdl:message>
  <wsdl:message name="ByArea_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:ByArea_DataSet" />
  </wsdl:message>
  <wsdl:message name="ByArea_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:ByArea_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeSoapIn">
    <wsdl:part name="parameters" element="tns:ByPostcode" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeSoapOut">
    <wsdl:part name="parameters" element="tns:ByPostcodeResponse" />
  </wsdl:message>
  <wsdl:message name="ByPostcode_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:ByPostcode_DataSet" />
  </wsdl:message>
  <wsdl:message name="ByPostcode_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:ByPostcode_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="ByPostcode_CombinedSoapIn">
    <wsdl:part name="parameters" element="tns:ByPostcode_Combined" />
  </wsdl:message>
  <wsdl:message name="ByPostcode_CombinedSoapOut">
    <wsdl:part name="parameters" element="tns:ByPostcode_CombinedResponse" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeFilteredSoapIn">
    <wsdl:part name="parameters" element="tns:ByPostcodeFiltered" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeFilteredSoapOut">
    <wsdl:part name="parameters" element="tns:ByPostcodeFilteredResponse" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeFiltered_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:ByPostcodeFiltered_DataSet" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeFiltered_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:ByPostcodeFiltered_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="ByCoordinatesSoapIn">
    <wsdl:part name="parameters" element="tns:ByCoordinates" />
  </wsdl:message>
  <wsdl:message name="ByCoordinatesSoapOut">
    <wsdl:part name="parameters" element="tns:ByCoordinatesResponse" />
  </wsdl:message>
  <wsdl:message name="ByCoordinates_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:ByCoordinates_DataSet" />
  </wsdl:message>
  <wsdl:message name="ByCoordinates_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:ByCoordinates_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="ByOutcodeSoapIn">
    <wsdl:part name="parameters" element="tns:ByOutcode" />
  </wsdl:message>
  <wsdl:message name="ByOutcodeSoapOut">
    <wsdl:part name="parameters" element="tns:ByOutcodeResponse" />
  </wsdl:message>
  <wsdl:message name="ByOutcode_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:ByOutcode_DataSet" />
  </wsdl:message>
  <wsdl:message name="ByOutcode_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:ByOutcode_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="ByOrganisationSoapIn">
    <wsdl:part name="parameters" element="tns:ByOrganisation" />
  </wsdl:message>
  <wsdl:message name="ByOrganisationSoapOut">
    <wsdl:part name="parameters" element="tns:ByOrganisationResponse" />
  </wsdl:message>
  <wsdl:message name="ByOrganisation_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:ByOrganisation_DataSet" />
  </wsdl:message>
  <wsdl:message name="ByOrganisation_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:ByOrganisation_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="ByOrganisation_CombinedSoapIn">
    <wsdl:part name="parameters" element="tns:ByOrganisation_Combined" />
  </wsdl:message>
  <wsdl:message name="ByOrganisation_CombinedSoapOut">
    <wsdl:part name="parameters" element="tns:ByOrganisation_CombinedResponse" />
  </wsdl:message>
  <wsdl:message name="ByStreetSoapIn">
    <wsdl:part name="parameters" element="tns:ByStreet" />
  </wsdl:message>
  <wsdl:message name="ByStreetSoapOut">
    <wsdl:part name="parameters" element="tns:ByStreetResponse" />
  </wsdl:message>
  <wsdl:message name="ByStreet_DatasetSoapIn">
    <wsdl:part name="parameters" element="tns:ByStreet_Dataset" />
  </wsdl:message>
  <wsdl:message name="ByStreet_DatasetSoapOut">
    <wsdl:part name="parameters" element="tns:ByStreet_DatasetResponse" />
  </wsdl:message>
  <wsdl:message name="ByStreetFilteredSoapIn">
    <wsdl:part name="parameters" element="tns:ByStreetFiltered" />
  </wsdl:message>
  <wsdl:message name="ByStreetFilteredSoapOut">
    <wsdl:part name="parameters" element="tns:ByStreetFilteredResponse" />
  </wsdl:message>
  <wsdl:message name="ByStreetFiltered_DatasetSoapIn">
    <wsdl:part name="parameters" element="tns:ByStreetFiltered_Dataset" />
  </wsdl:message>
  <wsdl:message name="ByStreetFiltered_DatasetSoapOut">
    <wsdl:part name="parameters" element="tns:ByStreetFiltered_DatasetResponse" />
  </wsdl:message>
  <wsdl:message name="ByStreet_CombinedSoapIn">
    <wsdl:part name="parameters" element="tns:ByStreet_Combined" />
  </wsdl:message>
  <wsdl:message name="ByStreet_CombinedSoapOut">
    <wsdl:part name="parameters" element="tns:ByStreet_CombinedResponse" />
  </wsdl:message>
  <wsdl:message name="ByBuildingSoapIn">
    <wsdl:part name="parameters" element="tns:ByBuilding" />
  </wsdl:message>
  <wsdl:message name="ByBuildingSoapOut">
    <wsdl:part name="parameters" element="tns:ByBuildingResponse" />
  </wsdl:message>
  <wsdl:message name="ByBuilding_DatasetSoapIn">
    <wsdl:part name="parameters" element="tns:ByBuilding_Dataset" />
  </wsdl:message>
  <wsdl:message name="ByBuilding_DatasetSoapOut">
    <wsdl:part name="parameters" element="tns:ByBuilding_DatasetResponse" />
  </wsdl:message>
  <wsdl:message name="ByBuilding_CombinedSoapIn">
    <wsdl:part name="parameters" element="tns:ByBuilding_Combined" />
  </wsdl:message>
  <wsdl:message name="ByBuilding_CombinedSoapOut">
    <wsdl:part name="parameters" element="tns:ByBuilding_CombinedResponse" />
  </wsdl:message>
  <wsdl:message name="ByStreetKeySoapIn">
    <wsdl:part name="parameters" element="tns:ByStreetKey" />
  </wsdl:message>
  <wsdl:message name="ByStreetKeySoapOut">
    <wsdl:part name="parameters" element="tns:ByStreetKeyResponse" />
  </wsdl:message>
  <wsdl:message name="ByStreetKey_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:ByStreetKey_DataSet" />
  </wsdl:message>
  <wsdl:message name="ByStreetKey_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:ByStreetKey_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="ByStreetKey_CombinedSoapIn">
    <wsdl:part name="parameters" element="tns:ByStreetKey_Combined" />
  </wsdl:message>
  <wsdl:message name="ByStreetKey_CombinedSoapOut">
    <wsdl:part name="parameters" element="tns:ByStreetKey_CombinedResponse" />
  </wsdl:message>
  <wsdl:message name="ByLocalityKeySoapIn">
    <wsdl:part name="parameters" element="tns:ByLocalityKey" />
  </wsdl:message>
  <wsdl:message name="ByLocalityKeySoapOut">
    <wsdl:part name="parameters" element="tns:ByLocalityKeyResponse" />
  </wsdl:message>
  <wsdl:message name="ByLocalityKey_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:ByLocalityKey_DataSet" />
  </wsdl:message>
  <wsdl:message name="ByLocalityKey_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:ByLocalityKey_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="ByLocationSoapIn">
    <wsdl:part name="parameters" element="tns:ByLocation" />
  </wsdl:message>
  <wsdl:message name="ByLocationSoapOut">
    <wsdl:part name="parameters" element="tns:ByLocationResponse" />
  </wsdl:message>
  <wsdl:message name="ByLocation_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:ByLocation_DataSet" />
  </wsdl:message>
  <wsdl:message name="ByLocation_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:ByLocation_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="LocationSoapIn">
    <wsdl:part name="parameters" element="tns:Location" />
  </wsdl:message>
  <wsdl:message name="LocationSoapOut">
    <wsdl:part name="parameters" element="tns:LocationResponse" />
  </wsdl:message>
  <wsdl:message name="Location_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:Location_DataSet" />
  </wsdl:message>
  <wsdl:message name="Location_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:Location_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="ByFreeTextSoapIn">
    <wsdl:part name="parameters" element="tns:ByFreeText" />
  </wsdl:message>
  <wsdl:message name="ByFreeTextSoapOut">
    <wsdl:part name="parameters" element="tns:ByFreeTextResponse" />
  </wsdl:message>
  <wsdl:message name="ByFreeText_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:ByFreeText_DataSet" />
  </wsdl:message>
  <wsdl:message name="ByFreeText_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:ByFreeText_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="ByFreeText_CombinedSoapIn">
    <wsdl:part name="parameters" element="tns:ByFreeText_Combined" />
  </wsdl:message>
  <wsdl:message name="ByFreeText_CombinedSoapOut">
    <wsdl:part name="parameters" element="tns:ByFreeText_CombinedResponse" />
  </wsdl:message>
  <wsdl:message name="FetchAddress_SimpleSoapIn">
    <wsdl:part name="parameters" element="tns:FetchAddress_Simple" />
  </wsdl:message>
  <wsdl:message name="FetchAddress_SimpleSoapOut">
    <wsdl:part name="parameters" element="tns:FetchAddress_SimpleResponse" />
  </wsdl:message>
  <wsdl:message name="FetchAddressSoapIn">
    <wsdl:part name="parameters" element="tns:FetchAddress" />
  </wsdl:message>
  <wsdl:message name="FetchAddressSoapOut">
    <wsdl:part name="parameters" element="tns:FetchAddressResponse" />
  </wsdl:message>
  <wsdl:message name="FastAddressSoapIn">
    <wsdl:part name="parameters" element="tns:FastAddress" />
  </wsdl:message>
  <wsdl:message name="FastAddressSoapOut">
    <wsdl:part name="parameters" element="tns:FastAddressResponse" />
  </wsdl:message>
  <wsdl:message name="FetchAddress_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:FetchAddress_DataSet" />
  </wsdl:message>
  <wsdl:message name="FetchAddress_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:FetchAddress_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="FastAddress_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:FastAddress_DataSet" />
  </wsdl:message>
  <wsdl:message name="FastAddress_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:FastAddress_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="DistanceSoapIn">
    <wsdl:part name="parameters" element="tns:Distance" />
  </wsdl:message>
  <wsdl:message name="DistanceSoapOut">
    <wsdl:part name="parameters" element="tns:DistanceResponse" />
  </wsdl:message>
  <wsdl:message name="NearestPostcodeSoapIn">
    <wsdl:part name="parameters" element="tns:NearestPostcode" />
  </wsdl:message>
  <wsdl:message name="NearestPostcodeSoapOut">
    <wsdl:part name="parameters" element="tns:NearestPostcodeResponse" />
  </wsdl:message>
  <wsdl:message name="NearestPostcode_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:NearestPostcode_DataSet" />
  </wsdl:message>
  <wsdl:message name="NearestPostcode_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:NearestPostcode_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="NearestSoapIn">
    <wsdl:part name="parameters" element="tns:Nearest" />
  </wsdl:message>
  <wsdl:message name="NearestSoapOut">
    <wsdl:part name="parameters" element="tns:NearestResponse" />
  </wsdl:message>
  <wsdl:message name="Nearest_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:Nearest_DataSet" />
  </wsdl:message>
  <wsdl:message name="Nearest_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:Nearest_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="StoredNearestSoapIn">
    <wsdl:part name="parameters" element="tns:StoredNearest" />
  </wsdl:message>
  <wsdl:message name="StoredNearestSoapOut">
    <wsdl:part name="parameters" element="tns:StoredNearestResponse" />
  </wsdl:message>
  <wsdl:message name="StoredNearest_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:StoredNearest_DataSet" />
  </wsdl:message>
  <wsdl:message name="StoredNearest_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:StoredNearest_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="NearestRadialSoapIn">
    <wsdl:part name="parameters" element="tns:NearestRadial" />
  </wsdl:message>
  <wsdl:message name="NearestRadialSoapOut">
    <wsdl:part name="parameters" element="tns:NearestRadialResponse" />
  </wsdl:message>
  <wsdl:message name="NearestRadial_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:NearestRadial_DataSet" />
  </wsdl:message>
  <wsdl:message name="NearestRadial_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:NearestRadial_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="StoredNearestRadialSoapIn">
    <wsdl:part name="parameters" element="tns:StoredNearestRadial" />
  </wsdl:message>
  <wsdl:message name="StoredNearestRadialSoapOut">
    <wsdl:part name="parameters" element="tns:StoredNearestRadialResponse" />
  </wsdl:message>
  <wsdl:message name="StoredNearestRadial_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:StoredNearestRadial_DataSet" />
  </wsdl:message>
  <wsdl:message name="StoredNearestRadial_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:StoredNearestRadial_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="ChangesSoapIn">
    <wsdl:part name="parameters" element="tns:Changes" />
  </wsdl:message>
  <wsdl:message name="ChangesSoapOut">
    <wsdl:part name="parameters" element="tns:ChangesResponse" />
  </wsdl:message>
  <wsdl:message name="Changes_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:Changes_DataSet" />
  </wsdl:message>
  <wsdl:message name="Changes_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:Changes_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="CleanseSoapIn">
    <wsdl:part name="parameters" element="tns:Cleanse" />
  </wsdl:message>
  <wsdl:message name="CleanseSoapOut">
    <wsdl:part name="parameters" element="tns:CleanseResponse" />
  </wsdl:message>
  <wsdl:message name="Cleanse_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:Cleanse_DataSet" />
  </wsdl:message>
  <wsdl:message name="Cleanse_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:Cleanse_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="BatchCleanseSoapIn">
    <wsdl:part name="parameters" element="tns:BatchCleanse" />
  </wsdl:message>
  <wsdl:message name="BatchCleanseSoapOut">
    <wsdl:part name="parameters" element="tns:BatchCleanseResponse" />
  </wsdl:message>
  <wsdl:message name="BatchCleanse_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:BatchCleanse_DataSet" />
  </wsdl:message>
  <wsdl:message name="BatchCleanse_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:BatchCleanse_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="BatchFetchSoapIn">
    <wsdl:part name="parameters" element="tns:BatchFetch" />
  </wsdl:message>
  <wsdl:message name="BatchFetchSoapOut">
    <wsdl:part name="parameters" element="tns:BatchFetchResponse" />
  </wsdl:message>
  <wsdl:message name="BatchFetch_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:BatchFetch_DataSet" />
  </wsdl:message>
  <wsdl:message name="BatchFetch_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:BatchFetch_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="StatisticsByPostcodeSoapIn">
    <wsdl:part name="parameters" element="tns:StatisticsByPostcode" />
  </wsdl:message>
  <wsdl:message name="StatisticsByPostcodeSoapOut">
    <wsdl:part name="parameters" element="tns:StatisticsByPostcodeResponse" />
  </wsdl:message>
  <wsdl:message name="StatisticsByPostcode_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:StatisticsByPostcode_DataSet" />
  </wsdl:message>
  <wsdl:message name="StatisticsByPostcode_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:StatisticsByPostcode_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="StatisticsByOutcodeSoapIn">
    <wsdl:part name="parameters" element="tns:StatisticsByOutcode" />
  </wsdl:message>
  <wsdl:message name="StatisticsByOutcodeSoapOut">
    <wsdl:part name="parameters" element="tns:StatisticsByOutcodeResponse" />
  </wsdl:message>
  <wsdl:message name="StatisticsByOutcode_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:StatisticsByOutcode_DataSet" />
  </wsdl:message>
  <wsdl:message name="StatisticsByOutcode_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:StatisticsByOutcode_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="StatisticsBySectorSoapIn">
    <wsdl:part name="parameters" element="tns:StatisticsBySector" />
  </wsdl:message>
  <wsdl:message name="StatisticsBySectorSoapOut">
    <wsdl:part name="parameters" element="tns:StatisticsBySectorResponse" />
  </wsdl:message>
  <wsdl:message name="StatisticsBySector_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:StatisticsBySector_DataSet" />
  </wsdl:message>
  <wsdl:message name="StatisticsBySector_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:StatisticsBySector_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="StatisticsByStreetKeySoapIn">
    <wsdl:part name="parameters" element="tns:StatisticsByStreetKey" />
  </wsdl:message>
  <wsdl:message name="StatisticsByStreetKeySoapOut">
    <wsdl:part name="parameters" element="tns:StatisticsByStreetKeyResponse" />
  </wsdl:message>
  <wsdl:message name="StatisticsByStreetKey_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:StatisticsByStreetKey_DataSet" />
  </wsdl:message>
  <wsdl:message name="StatisticsByStreetKey_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:StatisticsByStreetKey_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="NearestOutcodesSoapIn">
    <wsdl:part name="parameters" element="tns:NearestOutcodes" />
  </wsdl:message>
  <wsdl:message name="NearestOutcodesSoapOut">
    <wsdl:part name="parameters" element="tns:NearestOutcodesResponse" />
  </wsdl:message>
  <wsdl:message name="NearestOutcodes_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:NearestOutcodes_DataSet" />
  </wsdl:message>
  <wsdl:message name="NearestOutcodes_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:NearestOutcodes_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="NearestSectorsSoapIn">
    <wsdl:part name="parameters" element="tns:NearestSectors" />
  </wsdl:message>
  <wsdl:message name="NearestSectorsSoapOut">
    <wsdl:part name="parameters" element="tns:NearestSectorsResponse" />
  </wsdl:message>
  <wsdl:message name="NearestSectors_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:NearestSectors_DataSet" />
  </wsdl:message>
  <wsdl:message name="NearestSectors_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:NearestSectors_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="ByPoBoxSoapIn">
    <wsdl:part name="parameters" element="tns:ByPoBox" />
  </wsdl:message>
  <wsdl:message name="ByPoBoxSoapOut">
    <wsdl:part name="parameters" element="tns:ByPoBoxResponse" />
  </wsdl:message>
  <wsdl:message name="ByPoBox_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:ByPoBox_DataSet" />
  </wsdl:message>
  <wsdl:message name="ByPoBox_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:ByPoBox_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="GeocodePostcodeSoapIn">
    <wsdl:part name="parameters" element="tns:GeocodePostcode" />
  </wsdl:message>
  <wsdl:message name="GeocodePostcodeSoapOut">
    <wsdl:part name="parameters" element="tns:GeocodePostcodeResponse" />
  </wsdl:message>
  <wsdl:message name="GeocodePostcode_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:GeocodePostcode_DataSet" />
  </wsdl:message>
  <wsdl:message name="GeocodePostcode_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:GeocodePostcode_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressIdSoapIn">
    <wsdl:part name="parameters" element="tns:GeocodeAddressId" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressIdSoapOut">
    <wsdl:part name="parameters" element="tns:GeocodeAddressIdResponse" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressId_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:GeocodeAddressId_DataSet" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressId_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:GeocodeAddressId_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressSoapIn">
    <wsdl:part name="parameters" element="tns:GeocodeAddress" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressSoapOut">
    <wsdl:part name="parameters" element="tns:GeocodeAddressResponse" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddress_DataSetSoapIn">
    <wsdl:part name="parameters" element="tns:GeocodeAddress_DataSet" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddress_DataSetSoapOut">
    <wsdl:part name="parameters" element="tns:GeocodeAddress_DataSetResponse" />
  </wsdl:message>
  <wsdl:message name="BrowseHttpGetIn">
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="BrowseHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="Browse_DataSetHttpGetIn">
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="Browse_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByAreaHttpGetIn">
    <wsdl:part name="Area" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByAreaHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByArea_DataSetHttpGetIn">
    <wsdl:part name="Area" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByArea_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeHttpGetIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByPostcode_DataSetHttpGetIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPostcode_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByPostcode_CombinedHttpGetIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPostcode_CombinedHttpGetOut">
    <wsdl:part name="Body" element="tns:CombinedResults" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeFilteredHttpGetIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeFilteredHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeFiltered_DataSetHttpGetIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeFiltered_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByCoordinatesHttpGetIn">
    <wsdl:part name="EastingMin" type="s:string" />
    <wsdl:part name="EastingMax" type="s:string" />
    <wsdl:part name="NorthingMin" type="s:string" />
    <wsdl:part name="NorthingMax" type="s:string" />
    <wsdl:part name="Options" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByCoordinatesHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByCoordinates_DataSetHttpGetIn">
    <wsdl:part name="EastingMin" type="s:string" />
    <wsdl:part name="EastingMax" type="s:string" />
    <wsdl:part name="NorthingMin" type="s:string" />
    <wsdl:part name="NorthingMax" type="s:string" />
    <wsdl:part name="Options" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByCoordinates_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByOutcodeHttpGetIn">
    <wsdl:part name="Outcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByOutcodeHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByOutcode_DataSetHttpGetIn">
    <wsdl:part name="Outcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByOutcode_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByOrganisationHttpGetIn">
    <wsdl:part name="Organisation" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Fuzzy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByOrganisationHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByOrganisation_DataSetHttpGetIn">
    <wsdl:part name="Organisation" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Fuzzy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByOrganisation_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByOrganisation_CombinedHttpGetIn">
    <wsdl:part name="Organisation" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Fuzzy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByOrganisation_CombinedHttpGetOut">
    <wsdl:part name="Body" element="tns:CombinedResults" />
  </wsdl:message>
  <wsdl:message name="ByStreetHttpGetIn">
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Fuzzy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreetHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByStreet_DatasetHttpGetIn">
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Fuzzy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreet_DatasetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByStreetFilteredHttpGetIn">
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreetFilteredHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByStreetFiltered_DatasetHttpGetIn">
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreetFiltered_DatasetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByStreet_CombinedHttpGetIn">
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Fuzzy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreet_CombinedHttpGetOut">
    <wsdl:part name="Body" element="tns:CombinedResults" />
  </wsdl:message>
  <wsdl:message name="ByBuildingHttpGetIn">
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="JustBuildings" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByBuildingHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByBuilding_DatasetHttpGetIn">
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="JustBuildings" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByBuilding_DatasetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByBuilding_CombinedHttpGetIn">
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="JustBuildings" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByBuilding_CombinedHttpGetOut">
    <wsdl:part name="Body" element="tns:CombinedResults" />
  </wsdl:message>
  <wsdl:message name="ByStreetKeyHttpGetIn">
    <wsdl:part name="StreetKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreetKeyHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByStreetKey_DataSetHttpGetIn">
    <wsdl:part name="StreetKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreetKey_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByStreetKey_CombinedHttpGetIn">
    <wsdl:part name="StreetKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreetKey_CombinedHttpGetOut">
    <wsdl:part name="Body" element="tns:CombinedResults" />
  </wsdl:message>
  <wsdl:message name="ByLocalityKeyHttpGetIn">
    <wsdl:part name="LocalityKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByLocalityKeyHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByLocalityKey_DataSetHttpGetIn">
    <wsdl:part name="LocalityKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByLocalityKey_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByLocationHttpGetIn">
    <wsdl:part name="Location" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByLocationHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByLocation_DataSetHttpGetIn">
    <wsdl:part name="Location" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByLocation_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="LocationHttpGetIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LocationHttpGetOut">
    <wsdl:part name="Body" element="tns:LocationResults" />
  </wsdl:message>
  <wsdl:message name="Location_DataSetHttpGetIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="Location_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByFreeTextHttpGetIn">
    <wsdl:part name="FreeText" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByFreeTextHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByFreeText_DataSetHttpGetIn">
    <wsdl:part name="FreeText" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByFreeText_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByFreeText_CombinedHttpGetIn">
    <wsdl:part name="FreeText" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByFreeText_CombinedHttpGetOut">
    <wsdl:part name="Body" element="tns:CombinedResults" />
  </wsdl:message>
  <wsdl:message name="FetchAddress_SimpleHttpGetIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FetchAddress_SimpleHttpGetOut">
    <wsdl:part name="Body" element="tns:AddressResults" />
  </wsdl:message>
  <wsdl:message name="FetchAddressHttpGetIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FetchAddressHttpGetOut">
    <wsdl:part name="Body" element="tns:AddressResults" />
  </wsdl:message>
  <wsdl:message name="FastAddressHttpGetIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FastAddressHttpGetOut">
    <wsdl:part name="Body" element="tns:AddressResults" />
  </wsdl:message>
  <wsdl:message name="FetchAddress_DataSetHttpGetIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FetchAddress_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="FastAddress_DataSetHttpGetIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FastAddress_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="DistanceHttpGetIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Destination" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="DistanceHttpGetOut">
    <wsdl:part name="Body" element="tns:double" />
  </wsdl:message>
  <wsdl:message name="NearestPostcodeHttpGetIn">
    <wsdl:part name="Easting" type="s:string" />
    <wsdl:part name="Northing" type="s:string" />
    <wsdl:part name="Latitude" type="s:string" />
    <wsdl:part name="Longitude" type="s:string" />
    <wsdl:part name="Datum" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestPostcodeHttpGetOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="NearestPostcode_DataSetHttpGetIn">
    <wsdl:part name="Easting" type="s:string" />
    <wsdl:part name="Northing" type="s:string" />
    <wsdl:part name="Latitude" type="s:string" />
    <wsdl:part name="Longitude" type="s:string" />
    <wsdl:part name="Datum" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestPostcode_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="NearestHttpGetIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Destinations" type="s1:StringArray" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestHttpGetOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="Nearest_DataSetHttpGetIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Destinations" type="s1:StringArray" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="Nearest_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="StoredNearestHttpGetIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StoredNearestHttpGetOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="StoredNearest_DataSetHttpGetIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StoredNearest_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="NearestRadialHttpGetIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Destinations" type="s1:StringArray" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestRadialHttpGetOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="NearestRadial_DataSetHttpGetIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Destinations" type="s1:StringArray" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestRadial_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="StoredNearestRadialHttpGetIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StoredNearestRadialHttpGetOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="StoredNearestRadial_DataSetHttpGetIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StoredNearestRadial_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ChangesHttpGetIn">
    <wsdl:part name="StartDate" type="s:string" />
    <wsdl:part name="EndDate" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ChangesHttpGetOut">
    <wsdl:part name="Body" element="tns:ChangesResults" />
  </wsdl:message>
  <wsdl:message name="Changes_DataSetHttpGetIn">
    <wsdl:part name="StartDate" type="s:string" />
    <wsdl:part name="EndDate" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="Changes_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="CleanseHttpGetIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Organisation" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Address" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CleanseHttpGetOut">
    <wsdl:part name="Body" element="tns:CleanseResults" />
  </wsdl:message>
  <wsdl:message name="Cleanse_DataSetHttpGetIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Organisation" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Address" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="Cleanse_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="BatchCleanseHttpGetIn">
    <wsdl:part name="Addresses" type="s1:StringArray" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="BatchCleanseHttpGetOut">
    <wsdl:part name="Body" element="tns:AddressResults" />
  </wsdl:message>
  <wsdl:message name="BatchCleanse_DataSetHttpGetIn">
    <wsdl:part name="Addresses" type="s1:StringArray" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="BatchCleanse_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="BatchFetchHttpGetIn">
    <wsdl:part name="IDs" type="s1:StringArray" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="BatchFetchHttpGetOut">
    <wsdl:part name="Body" element="tns:AddressResults" />
  </wsdl:message>
  <wsdl:message name="BatchFetch_DataSetHttpGetIn">
    <wsdl:part name="IDs" type="s1:StringArray" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="BatchFetch_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="StatisticsByPostcodeHttpGetIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsByPostcodeHttpGetOut">
    <wsdl:part name="Body" element="tns:StatisticsResults" />
  </wsdl:message>
  <wsdl:message name="StatisticsByPostcode_DataSetHttpGetIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsByPostcode_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="StatisticsByOutcodeHttpGetIn">
    <wsdl:part name="Outcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsByOutcodeHttpGetOut">
    <wsdl:part name="Body" element="tns:StatisticsResults" />
  </wsdl:message>
  <wsdl:message name="StatisticsByOutcode_DataSetHttpGetIn">
    <wsdl:part name="Outcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsByOutcode_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="StatisticsBySectorHttpGetIn">
    <wsdl:part name="Sector" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsBySectorHttpGetOut">
    <wsdl:part name="Body" element="tns:StatisticsResults" />
  </wsdl:message>
  <wsdl:message name="StatisticsBySector_DataSetHttpGetIn">
    <wsdl:part name="Sector" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsBySector_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="StatisticsByStreetKeyHttpGetIn">
    <wsdl:part name="StreetKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsByStreetKeyHttpGetOut">
    <wsdl:part name="Body" element="tns:StatisticsResults" />
  </wsdl:message>
  <wsdl:message name="StatisticsByStreetKey_DataSetHttpGetIn">
    <wsdl:part name="StreetKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsByStreetKey_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="NearestOutcodesHttpGetIn">
    <wsdl:part name="Easting" type="s:string" />
    <wsdl:part name="Northing" type="s:string" />
    <wsdl:part name="Latitude" type="s:string" />
    <wsdl:part name="Longitude" type="s:string" />
    <wsdl:part name="Datum" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestOutcodesHttpGetOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="NearestOutcodes_DataSetHttpGetIn">
    <wsdl:part name="Easting" type="s:string" />
    <wsdl:part name="Northing" type="s:string" />
    <wsdl:part name="Latitude" type="s:string" />
    <wsdl:part name="Longitude" type="s:string" />
    <wsdl:part name="Datum" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestOutcodes_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="NearestSectorsHttpGetIn">
    <wsdl:part name="Easting" type="s:string" />
    <wsdl:part name="Northing" type="s:string" />
    <wsdl:part name="Latitude" type="s:string" />
    <wsdl:part name="Longitude" type="s:string" />
    <wsdl:part name="Datum" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestSectorsHttpGetOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="NearestSectors_DataSetHttpGetIn">
    <wsdl:part name="Easting" type="s:string" />
    <wsdl:part name="Northing" type="s:string" />
    <wsdl:part name="Latitude" type="s:string" />
    <wsdl:part name="Longitude" type="s:string" />
    <wsdl:part name="Datum" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestSectors_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByPoBoxHttpGetIn">
    <wsdl:part name="PoBox" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPoBoxHttpGetOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByPoBox_DataSetHttpGetIn">
    <wsdl:part name="PoBox" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPoBox_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GeocodePostcodeHttpGetIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Accuracy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GeocodePostcodeHttpGetOut">
    <wsdl:part name="Body" element="tns:GeocodeResults" />
  </wsdl:message>
  <wsdl:message name="GeocodePostcode_DataSetHttpGetIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Accuracy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GeocodePostcode_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressIdHttpGetIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="Accuracy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressIdHttpGetOut">
    <wsdl:part name="Body" element="tns:GeocodeResults" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressId_DataSetHttpGetIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="Accuracy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressId_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressHttpGetIn">
    <wsdl:part name="Address" type="s:string" />
    <wsdl:part name="Accuracy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressHttpGetOut">
    <wsdl:part name="Body" element="tns:GeocodeResults" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddress_DataSetHttpGetIn">
    <wsdl:part name="Address" type="s:string" />
    <wsdl:part name="Accuracy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddress_DataSetHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="BrowseHttpPostIn">
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="BrowseHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="Browse_DataSetHttpPostIn">
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="Browse_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByAreaHttpPostIn">
    <wsdl:part name="Area" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByAreaHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByArea_DataSetHttpPostIn">
    <wsdl:part name="Area" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByArea_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeHttpPostIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByPostcode_DataSetHttpPostIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPostcode_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByPostcode_CombinedHttpPostIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPostcode_CombinedHttpPostOut">
    <wsdl:part name="Body" element="tns:CombinedResults" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeFilteredHttpPostIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeFilteredHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeFiltered_DataSetHttpPostIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPostcodeFiltered_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByCoordinatesHttpPostIn">
    <wsdl:part name="EastingMin" type="s:string" />
    <wsdl:part name="EastingMax" type="s:string" />
    <wsdl:part name="NorthingMin" type="s:string" />
    <wsdl:part name="NorthingMax" type="s:string" />
    <wsdl:part name="Options" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByCoordinatesHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByCoordinates_DataSetHttpPostIn">
    <wsdl:part name="EastingMin" type="s:string" />
    <wsdl:part name="EastingMax" type="s:string" />
    <wsdl:part name="NorthingMin" type="s:string" />
    <wsdl:part name="NorthingMax" type="s:string" />
    <wsdl:part name="Options" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByCoordinates_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByOutcodeHttpPostIn">
    <wsdl:part name="Outcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByOutcodeHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByOutcode_DataSetHttpPostIn">
    <wsdl:part name="Outcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByOutcode_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByOrganisationHttpPostIn">
    <wsdl:part name="Organisation" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Fuzzy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByOrganisationHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByOrganisation_DataSetHttpPostIn">
    <wsdl:part name="Organisation" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Fuzzy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByOrganisation_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByOrganisation_CombinedHttpPostIn">
    <wsdl:part name="Organisation" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Fuzzy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByOrganisation_CombinedHttpPostOut">
    <wsdl:part name="Body" element="tns:CombinedResults" />
  </wsdl:message>
  <wsdl:message name="ByStreetHttpPostIn">
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Fuzzy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreetHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByStreet_DatasetHttpPostIn">
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Fuzzy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreet_DatasetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByStreetFilteredHttpPostIn">
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreetFilteredHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByStreetFiltered_DatasetHttpPostIn">
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreetFiltered_DatasetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByStreet_CombinedHttpPostIn">
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Fuzzy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreet_CombinedHttpPostOut">
    <wsdl:part name="Body" element="tns:CombinedResults" />
  </wsdl:message>
  <wsdl:message name="ByBuildingHttpPostIn">
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="JustBuildings" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByBuildingHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByBuilding_DatasetHttpPostIn">
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="JustBuildings" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByBuilding_DatasetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByBuilding_CombinedHttpPostIn">
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="JustBuildings" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByBuilding_CombinedHttpPostOut">
    <wsdl:part name="Body" element="tns:CombinedResults" />
  </wsdl:message>
  <wsdl:message name="ByStreetKeyHttpPostIn">
    <wsdl:part name="StreetKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreetKeyHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByStreetKey_DataSetHttpPostIn">
    <wsdl:part name="StreetKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreetKey_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByStreetKey_CombinedHttpPostIn">
    <wsdl:part name="StreetKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByStreetKey_CombinedHttpPostOut">
    <wsdl:part name="Body" element="tns:CombinedResults" />
  </wsdl:message>
  <wsdl:message name="ByLocalityKeyHttpPostIn">
    <wsdl:part name="LocalityKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByLocalityKeyHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByLocalityKey_DataSetHttpPostIn">
    <wsdl:part name="LocalityKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByLocalityKey_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByLocationHttpPostIn">
    <wsdl:part name="Location" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByLocationHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByLocation_DataSetHttpPostIn">
    <wsdl:part name="Location" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByLocation_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="LocationHttpPostIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="LocationHttpPostOut">
    <wsdl:part name="Body" element="tns:LocationResults" />
  </wsdl:message>
  <wsdl:message name="Location_DataSetHttpPostIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="Location_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByFreeTextHttpPostIn">
    <wsdl:part name="FreeText" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByFreeTextHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByFreeText_DataSetHttpPostIn">
    <wsdl:part name="FreeText" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByFreeText_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByFreeText_CombinedHttpPostIn">
    <wsdl:part name="FreeText" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByFreeText_CombinedHttpPostOut">
    <wsdl:part name="Body" element="tns:CombinedResults" />
  </wsdl:message>
  <wsdl:message name="FetchAddress_SimpleHttpPostIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FetchAddress_SimpleHttpPostOut">
    <wsdl:part name="Body" element="tns:AddressResults" />
  </wsdl:message>
  <wsdl:message name="FetchAddressHttpPostIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FetchAddressHttpPostOut">
    <wsdl:part name="Body" element="tns:AddressResults" />
  </wsdl:message>
  <wsdl:message name="FastAddressHttpPostIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FastAddressHttpPostOut">
    <wsdl:part name="Body" element="tns:AddressResults" />
  </wsdl:message>
  <wsdl:message name="FetchAddress_DataSetHttpPostIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FetchAddress_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="FastAddress_DataSetHttpPostIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FastAddress_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="DistanceHttpPostIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Destination" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="DistanceHttpPostOut">
    <wsdl:part name="Body" element="tns:double" />
  </wsdl:message>
  <wsdl:message name="NearestPostcodeHttpPostIn">
    <wsdl:part name="Easting" type="s:string" />
    <wsdl:part name="Northing" type="s:string" />
    <wsdl:part name="Latitude" type="s:string" />
    <wsdl:part name="Longitude" type="s:string" />
    <wsdl:part name="Datum" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestPostcodeHttpPostOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="NearestPostcode_DataSetHttpPostIn">
    <wsdl:part name="Easting" type="s:string" />
    <wsdl:part name="Northing" type="s:string" />
    <wsdl:part name="Latitude" type="s:string" />
    <wsdl:part name="Longitude" type="s:string" />
    <wsdl:part name="Datum" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestPostcode_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="NearestHttpPostIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Destinations" type="s1:StringArray" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestHttpPostOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="Nearest_DataSetHttpPostIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Destinations" type="s1:StringArray" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="Nearest_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="StoredNearestHttpPostIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StoredNearestHttpPostOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="StoredNearest_DataSetHttpPostIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StoredNearest_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="NearestRadialHttpPostIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Destinations" type="s1:StringArray" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestRadialHttpPostOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="NearestRadial_DataSetHttpPostIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Destinations" type="s1:StringArray" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestRadial_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="StoredNearestRadialHttpPostIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StoredNearestRadialHttpPostOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="StoredNearestRadial_DataSetHttpPostIn">
    <wsdl:part name="Origin" type="s:string" />
    <wsdl:part name="Units" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StoredNearestRadial_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ChangesHttpPostIn">
    <wsdl:part name="StartDate" type="s:string" />
    <wsdl:part name="EndDate" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ChangesHttpPostOut">
    <wsdl:part name="Body" element="tns:ChangesResults" />
  </wsdl:message>
  <wsdl:message name="Changes_DataSetHttpPostIn">
    <wsdl:part name="StartDate" type="s:string" />
    <wsdl:part name="EndDate" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="Changes_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="CleanseHttpPostIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Organisation" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Address" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="CleanseHttpPostOut">
    <wsdl:part name="Body" element="tns:CleanseResults" />
  </wsdl:message>
  <wsdl:message name="Cleanse_DataSetHttpPostIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Street" type="s:string" />
    <wsdl:part name="Organisation" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="Address" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="Cleanse_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="BatchCleanseHttpPostIn">
    <wsdl:part name="Addresses" type="s1:StringArray" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="BatchCleanseHttpPostOut">
    <wsdl:part name="Body" element="tns:AddressResults" />
  </wsdl:message>
  <wsdl:message name="BatchCleanse_DataSetHttpPostIn">
    <wsdl:part name="Addresses" type="s1:StringArray" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="BatchCleanse_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="BatchFetchHttpPostIn">
    <wsdl:part name="IDs" type="s1:StringArray" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="BatchFetchHttpPostOut">
    <wsdl:part name="Body" element="tns:AddressResults" />
  </wsdl:message>
  <wsdl:message name="BatchFetch_DataSetHttpPostIn">
    <wsdl:part name="IDs" type="s1:StringArray" />
    <wsdl:part name="Language" type="s:string" />
    <wsdl:part name="ContentType" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="BatchFetch_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="StatisticsByPostcodeHttpPostIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsByPostcodeHttpPostOut">
    <wsdl:part name="Body" element="tns:StatisticsResults" />
  </wsdl:message>
  <wsdl:message name="StatisticsByPostcode_DataSetHttpPostIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsByPostcode_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="StatisticsByOutcodeHttpPostIn">
    <wsdl:part name="Outcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsByOutcodeHttpPostOut">
    <wsdl:part name="Body" element="tns:StatisticsResults" />
  </wsdl:message>
  <wsdl:message name="StatisticsByOutcode_DataSetHttpPostIn">
    <wsdl:part name="Outcode" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsByOutcode_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="StatisticsBySectorHttpPostIn">
    <wsdl:part name="Sector" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsBySectorHttpPostOut">
    <wsdl:part name="Body" element="tns:StatisticsResults" />
  </wsdl:message>
  <wsdl:message name="StatisticsBySector_DataSetHttpPostIn">
    <wsdl:part name="Sector" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsBySector_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="StatisticsByStreetKeyHttpPostIn">
    <wsdl:part name="StreetKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsByStreetKeyHttpPostOut">
    <wsdl:part name="Body" element="tns:StatisticsResults" />
  </wsdl:message>
  <wsdl:message name="StatisticsByStreetKey_DataSetHttpPostIn">
    <wsdl:part name="StreetKey" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="StatisticsByStreetKey_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="NearestOutcodesHttpPostIn">
    <wsdl:part name="Easting" type="s:string" />
    <wsdl:part name="Northing" type="s:string" />
    <wsdl:part name="Latitude" type="s:string" />
    <wsdl:part name="Longitude" type="s:string" />
    <wsdl:part name="Datum" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestOutcodesHttpPostOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="NearestOutcodes_DataSetHttpPostIn">
    <wsdl:part name="Easting" type="s:string" />
    <wsdl:part name="Northing" type="s:string" />
    <wsdl:part name="Latitude" type="s:string" />
    <wsdl:part name="Longitude" type="s:string" />
    <wsdl:part name="Datum" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestOutcodes_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="NearestSectorsHttpPostIn">
    <wsdl:part name="Easting" type="s:string" />
    <wsdl:part name="Northing" type="s:string" />
    <wsdl:part name="Latitude" type="s:string" />
    <wsdl:part name="Longitude" type="s:string" />
    <wsdl:part name="Datum" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestSectorsHttpPostOut">
    <wsdl:part name="Body" element="tns:NearestResults" />
  </wsdl:message>
  <wsdl:message name="NearestSectors_DataSetHttpPostIn">
    <wsdl:part name="Easting" type="s:string" />
    <wsdl:part name="Northing" type="s:string" />
    <wsdl:part name="Latitude" type="s:string" />
    <wsdl:part name="Longitude" type="s:string" />
    <wsdl:part name="Datum" type="s:string" />
    <wsdl:part name="Radius" type="s:string" />
    <wsdl:part name="Items" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="NearestSectors_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="ByPoBoxHttpPostIn">
    <wsdl:part name="PoBox" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPoBoxHttpPostOut">
    <wsdl:part name="Body" element="tns:InterimResults" />
  </wsdl:message>
  <wsdl:message name="ByPoBox_DataSetHttpPostIn">
    <wsdl:part name="PoBox" type="s:string" />
    <wsdl:part name="Town" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ByPoBox_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GeocodePostcodeHttpPostIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Accuracy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GeocodePostcodeHttpPostOut">
    <wsdl:part name="Body" element="tns:GeocodeResults" />
  </wsdl:message>
  <wsdl:message name="GeocodePostcode_DataSetHttpPostIn">
    <wsdl:part name="Postcode" type="s:string" />
    <wsdl:part name="Building" type="s:string" />
    <wsdl:part name="Accuracy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GeocodePostcode_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressIdHttpPostIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="Accuracy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressIdHttpPostOut">
    <wsdl:part name="Body" element="tns:GeocodeResults" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressId_DataSetHttpPostIn">
    <wsdl:part name="Id" type="s:string" />
    <wsdl:part name="Accuracy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressId_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressHttpPostIn">
    <wsdl:part name="Address" type="s:string" />
    <wsdl:part name="Accuracy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddressHttpPostOut">
    <wsdl:part name="Body" element="tns:GeocodeResults" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddress_DataSetHttpPostIn">
    <wsdl:part name="Address" type="s:string" />
    <wsdl:part name="Accuracy" type="s:string" />
    <wsdl:part name="AccountCode" type="s:string" />
    <wsdl:part name="LicenseKey" type="s:string" />
    <wsdl:part name="MachineId" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GeocodeAddress_DataSetHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:portType name="LookupUKSoap">
    <wsdl:operation name="Browse">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, the postcode areas in the UK. Use the ID with the ByArea method to get list of the localities in the area.</documentation>
      <wsdl:input message="tns:BrowseSoapIn" />
      <wsdl:output message="tns:BrowseSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Browse_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As Browse but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Browse_DataSetSoapIn" />
      <wsdl:output message="tns:Browse_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByArea">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the localities in the given postcode area. Use the ID with the ByLocalityKey method to get a list of the streets in the locality.</documentation>
      <wsdl:input message="tns:ByAreaSoapIn" />
      <wsdl:output message="tns:ByAreaSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByArea_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByArea but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByArea_DataSetSoapIn" />
      <wsdl:output message="tns:ByArea_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties in the given postcode. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByPostcodeSoapIn" />
      <wsdl:output message="tns:ByPostcodeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByPostcode_DataSetSoapIn" />
      <wsdl:output message="tns:ByPostcode_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcode_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPostcode but the data is returned in the CombinedResults structure. If only one property would be returned by the method, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByPostcode_CombinedSoapIn" />
      <wsdl:output message="tns:ByPostcode_CombinedSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcodeFiltered">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties in the given postcode that also match the building name or number. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByPostcodeFilteredSoapIn" />
      <wsdl:output message="tns:ByPostcodeFilteredSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcodeFiltered_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPostcodeFiltered but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByPostcodeFiltered_DataSetSoapIn" />
      <wsdl:output message="tns:ByPostcodeFiltered_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByCoordinates">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties in the given coordinate rectangle. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByCoordinatesSoapIn" />
      <wsdl:output message="tns:ByCoordinatesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByCoordinates_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByCoordinates but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByCoordinates_DataSetSoapIn" />
      <wsdl:output message="tns:ByCoordinates_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOutcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning a list of the localities in the the given postcode outcode. Use the ID with the ByLocalityKey method to get a list of the streets in that locality.</documentation>
      <wsdl:input message="tns:ByOutcodeSoapIn" />
      <wsdl:output message="tns:ByOutcodeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOutcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByOutcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByOutcode_DataSetSoapIn" />
      <wsdl:output message="tns:ByOutcode_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching organisations. The town parameter can be blank and the organisation name is automatically wildcarded (e.g. "Boot" matches "Boots" and "Boots the chemists"). Use the fuzzy search to search phonetically. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByOrganisationSoapIn" />
      <wsdl:output message="tns:ByOrganisationSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByOrganisation but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByOrganisation_DataSetSoapIn" />
      <wsdl:output message="tns:ByOrganisation_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByOrganisation but the data is returned in the CombinedResults structure. If only one property would be returned by the method, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByOrganisation_CombinedSoapIn" />
      <wsdl:output message="tns:ByOrganisation_CombinedSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching streets. The town parameter can be the name of the town or the first part of the postcode (e.g. "LS, LS2, Leeds"). The street name is automatically wildcarded (e.g. "High" matches "High Street" and "High Way"). Use the fuzzy search to search phonetically. Use the ID with the ByStreetKey method to get a list of the properties in this street.</documentation>
      <wsdl:input message="tns:ByStreetSoapIn" />
      <wsdl:output message="tns:ByStreetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreet_Dataset">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreet but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByStreet_DatasetSoapIn" />
      <wsdl:output message="tns:ByStreet_DatasetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetFiltered">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching properties. Unlike the ByStreet method, this returns properties matching the building parameter in matching streets. The town parameter can be the name of the town or the first part of the postcode (e.g. "LS, LS2, Leeds"). The street name is automatically wildcarded (e.g. "High" matches "High Street" and "High Way"). Use the fuzzy search to search phonetically. Use the ID with the ByStreetKey method to get a list of the properties in this street.</documentation>
      <wsdl:input message="tns:ByStreetFilteredSoapIn" />
      <wsdl:output message="tns:ByStreetFilteredSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetFiltered_Dataset">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreetFiltered but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByStreetFiltered_DatasetSoapIn" />
      <wsdl:output message="tns:ByStreetFiltered_DatasetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreet_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreet but the data is returned in the CombinedResults structure. If only one street is found the method will return the list of properties. However, if only one property is listed, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByStreet_CombinedSoapIn" />
      <wsdl:output message="tns:ByStreet_CombinedSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByBuilding">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching properties. The town parameter should be the name of the town (e.g. "Leeds"). The building name is automatically wildcarded (e.g. "Hill" matches "Hilltop" and "Hill View").</documentation>
      <wsdl:input message="tns:ByBuildingSoapIn" />
      <wsdl:output message="tns:ByBuildingSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByBuilding_Dataset">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByBuilding but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByBuilding_DatasetSoapIn" />
      <wsdl:output message="tns:ByBuilding_DatasetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByBuilding_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByBuilding but the data is returned in the CombinedResults structure. If only one street is found the method will return the list of properties. However, if only one property is listed, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByBuilding_CombinedSoapIn" />
      <wsdl:output message="tns:ByBuilding_CombinedSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns all the properties in the street. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByStreetKeySoapIn" />
      <wsdl:output message="tns:ByStreetKeySoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreetKey but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByStreetKey_DataSetSoapIn" />
      <wsdl:output message="tns:ByStreetKey_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreetKey but the data is returned in the CombinedResults structure. If only one property would be returned by the method, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByStreetKey_CombinedSoapIn" />
      <wsdl:output message="tns:ByStreetKey_CombinedSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByLocalityKey">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns all the streets in the given locality. Use the ID with the ByStreetKey method to get a list of all the properties in the street.</documentation>
      <wsdl:input message="tns:ByLocalityKeySoapIn" />
      <wsdl:output message="tns:ByLocalityKeySoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByLocalityKey_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByLocalityKey but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByLocalityKey_DataSetSoapIn" />
      <wsdl:output message="tns:ByLocalityKey_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByLocation">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns the matching localities relating to the location (which can be a locality key, outcode, postcode or town name). Use the ID with the Location method to get the grid references or with StoredNearest (Origin).</documentation>
      <wsdl:input message="tns:ByLocationSoapIn" />
      <wsdl:output message="tns:ByLocationSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByLocation_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByLocation but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByLocation_DataSetSoapIn" />
      <wsdl:output message="tns:ByLocation_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Location">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns the coordinates for the given Id (from ByLocation)</documentation>
      <wsdl:input message="tns:LocationSoapIn" />
      <wsdl:output message="tns:LocationSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Location_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As Location but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Location_DataSetSoapIn" />
      <wsdl:output message="tns:Location_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByFreeText">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties matching the freetext string. The freetext string can contain a building, street, town, postcode or partial postcode. Most combinations are valid although they must be separated by commas and in that order. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByFreeTextSoapIn" />
      <wsdl:output message="tns:ByFreeTextSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByFreeText_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByFreeText but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByFreeText_DataSetSoapIn" />
      <wsdl:output message="tns:ByFreeText_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByFreeText_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByFreeText but the data is returned in the CombinedResults structure. If only one property would be returned by the method, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByFreeText_CombinedSoapIn" />
      <wsdl:output message="tns:ByFreeText_CombinedSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FetchAddress_Simple">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As FetchAddress but does not use enumerated type for input parameters, use strings instead</documentation>
      <wsdl:input message="tns:FetchAddress_SimpleSoapIn" />
      <wsdl:output message="tns:FetchAddress_SimpleSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FetchAddress">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the address corresponding to the ID parameter. Use the ContentType parameter to select which fields to return. Use the Language parameter to select which language to return the address in.</documentation>
      <wsdl:input message="tns:FetchAddressSoapIn" />
      <wsdl:output message="tns:FetchAddressSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FastAddress">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning an address matching the Postcode and Building. The Building parameter represents the building name or number and is automatically wildcarded (e.g. "Eni" matches "Enigma House") and can be blank and if the postcode contains more than one property, the first will be returned. Use the ContentType parameter to select which fields to return. Use the Language parameter to select which language to return the address in.</documentation>
      <wsdl:input message="tns:FastAddressSoapIn" />
      <wsdl:output message="tns:FastAddressSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FetchAddress_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As FetchAddress but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:FetchAddress_DataSetSoapIn" />
      <wsdl:output message="tns:FetchAddress_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FastAddress_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As FastAddress but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:FastAddress_DataSetSoapIn" />
      <wsdl:output message="tns:FastAddress_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Distance">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Calculates the distance in metres between the origin and destination postcodes. Any errors will be raised as a SOAP exception.</documentation>
      <wsdl:input message="tns:DistanceSoapIn" />
      <wsdl:output message="tns:DistanceSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestPostcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the coordinates of the Origin postcode and the array of Destination postcodes. The distance between the Origin and each Destination is calculated and the nearest Items (e.g. 2 returns the nearest 2 Destinations) are returned along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:NearestPostcodeSoapIn" />
      <wsdl:output message="tns:NearestPostcodeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestPostcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As NearestPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:NearestPostcode_DataSetSoapIn" />
      <wsdl:output message="tns:NearestPostcode_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Nearest">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the coordinates of the Origin postcode and the array of Destination postcodes. The distance between the Origin and each Destination is calculated and the nearest Items (e.g. 2 returns the nearest 2 Destinations) are returned along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:NearestSoapIn" />
      <wsdl:output message="tns:NearestSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Nearest_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As Nearest but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Nearest_DataSetSoapIn" />
      <wsdl:output message="tns:Nearest_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StoredNearest">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the coordinates of the Origin postcode against a set of postcodes that have already been uploaded against the License Key. The distance between the Origin and each uploaded destination is calculated and the nearest Items (e.g. 2 returns the nearest 2 destinations) are returned along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:StoredNearestSoapIn" />
      <wsdl:output message="tns:StoredNearestSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StoredNearest_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StoredNearest but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StoredNearest_DataSetSoapIn" />
      <wsdl:output message="tns:StoredNearest_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestRadial">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Extends the Nearest method with support for radial restrictions (i.e. returns only the items within X of the origin.</documentation>
      <wsdl:input message="tns:NearestRadialSoapIn" />
      <wsdl:output message="tns:NearestRadialSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestRadial_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As NearestRadial but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:NearestRadial_DataSetSoapIn" />
      <wsdl:output message="tns:NearestRadial_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StoredNearestRadial">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Extends the StoredNearest method with support for radial restrictions (i.e. returns only the items within X of the origin.</documentation>
      <wsdl:input message="tns:StoredNearestRadialSoapIn" />
      <wsdl:output message="tns:StoredNearestRadialSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StoredNearestRadial_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StoredNearestRadial but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StoredNearestRadial_DataSetSoapIn" />
      <wsdl:output message="tns:StoredNearestRadial_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Changes">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, checking all the properties that have been fetched against the account between the StartDate and EndDate and returns information about which properties have been changed.</documentation>
      <wsdl:input message="tns:ChangesSoapIn" />
      <wsdl:output message="tns:ChangesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Changes_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As Changes but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Changes_DataSetSoapIn" />
      <wsdl:output message="tns:Changes_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Cleanse">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties matching the given address elements. As many of the address elements should be provided along with the formatted Address parameter which is used to assess the confidence of the match. The confience property reflects the confidence of the result (the results are ranked in descending order of confidence). Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:CleanseSoapIn" />
      <wsdl:output message="tns:CleanseSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Cleanse_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Cleanse_DataSetSoapIn" />
      <wsdl:output message="tns:Cleanse_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="BatchCleanse">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties matching the given addresses. The addresses should be supplied in the Addresses array with one address per record. Within each record, address lines should be separated by commas. The results are provided in the order they are suppled and batch sizes are limited to 1000 addresses per batch.</documentation>
      <wsdl:input message="tns:BatchCleanseSoapIn" />
      <wsdl:output message="tns:BatchCleanseSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="BatchCleanse_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As BatchCleanse but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:BatchCleanse_DataSetSoapIn" />
      <wsdl:output message="tns:BatchCleanse_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="BatchFetch">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties matching the given IDs. The IDs should be listed in the array. The results are provided in the order they are suppled.</documentation>
      <wsdl:input message="tns:BatchFetchSoapIn" />
      <wsdl:output message="tns:BatchFetchSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="BatchFetch_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As BatchFetch but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:BatchFetch_DataSetSoapIn" />
      <wsdl:output message="tns:BatchFetch_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByPostcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the number of delivery points for the matching postcodes. A full postcode is required.</documentation>
      <wsdl:input message="tns:StatisticsByPostcodeSoapIn" />
      <wsdl:output message="tns:StatisticsByPostcodeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByPostcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StatisticsByPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StatisticsByPostcode_DataSetSoapIn" />
      <wsdl:output message="tns:StatisticsByPostcode_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByOutcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the number of delivery points for the matching postcodes.</documentation>
      <wsdl:input message="tns:StatisticsByOutcodeSoapIn" />
      <wsdl:output message="tns:StatisticsByOutcodeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByOutcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StatisticsByPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StatisticsByOutcode_DataSetSoapIn" />
      <wsdl:output message="tns:StatisticsByOutcode_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsBySector">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the number of delivery points for the matching postcodes. A full postcode is required.</documentation>
      <wsdl:input message="tns:StatisticsBySectorSoapIn" />
      <wsdl:output message="tns:StatisticsBySectorSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsBySector_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StatisticsBySector but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StatisticsBySector_DataSetSoapIn" />
      <wsdl:output message="tns:StatisticsBySector_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByStreetKey">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the number of delivery points for the matching postcodes. A full or partial postcode can be supplied.</documentation>
      <wsdl:input message="tns:StatisticsByStreetKeySoapIn" />
      <wsdl:output message="tns:StatisticsByStreetKeySoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByStreetKey_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StatisticsByStreetKey but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StatisticsByStreetKey_DataSetSoapIn" />
      <wsdl:output message="tns:StatisticsByStreetKey_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestOutcodes">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the nearest outcodes (with coordinates) to the given coordinates. The distance between the point of origin and centre of the outcode is calculated and the nearest Items (e.g. 2 returns the nearest 2 Destinations) are returned, within Radius metres of the origin, along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:NearestOutcodesSoapIn" />
      <wsdl:output message="tns:NearestOutcodesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestOutcodes_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As NearestOutcodes but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:NearestOutcodes_DataSetSoapIn" />
      <wsdl:output message="tns:NearestOutcodes_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestSectors">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the nearest sectors (with coordinates) to the given coordinates. The distance between the point of origin and centre of the outcode is calculated and the nearest Items (e.g. 2 returns the nearest 2 Destinations) are returned, within Radius metres of the origin, along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:NearestSectorsSoapIn" />
      <wsdl:output message="tns:NearestSectorsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestSectors_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As NearestSectors but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:NearestSectors_DataSetSoapIn" />
      <wsdl:output message="tns:NearestSectors_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPoBox">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching addresses with the given PO box. The town parameter can be blank or a partial postcode. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByPoBoxSoapIn" />
      <wsdl:output message="tns:ByPoBoxSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPoBox_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPoBox but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByPoBox_DataSetSoapIn" />
      <wsdl:output message="tns:ByPoBox_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodePostcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the coordinates for the postcode. If the building property is provided, the coordinates will relate to the individual property. If the Accuracy parameter is set to "High" then coordinates accurate to 1 metre are returned, otherwise coordinates accurate to 100m are returned.</documentation>
      <wsdl:input message="tns:GeocodePostcodeSoapIn" />
      <wsdl:output message="tns:GeocodePostcodeSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodePostcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As GeocodePostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:GeocodePostcode_DataSetSoapIn" />
      <wsdl:output message="tns:GeocodePostcode_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddressId">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the coordinates for the property. If the Accuracy parameter is set to "High" then coordinates accurate to 1 metre are returned, otherwise coordinates accurate to 100m are returned.</documentation>
      <wsdl:input message="tns:GeocodeAddressIdSoapIn" />
      <wsdl:output message="tns:GeocodeAddressIdSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddressId_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As GeocodeAddressId but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:GeocodeAddressId_DataSetSoapIn" />
      <wsdl:output message="tns:GeocodeAddressId_DataSetSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddress">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the coordinates for the property. If the Accuracy parameter is set to "High" then coordinates accurate to 1 metre are returned, otherwise coordinates accurate to 100m are returned.</documentation>
      <wsdl:input message="tns:GeocodeAddressSoapIn" />
      <wsdl:output message="tns:GeocodeAddressSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddress_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As GeocodeAddress but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:GeocodeAddress_DataSetSoapIn" />
      <wsdl:output message="tns:GeocodeAddress_DataSetSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="LookupUKHttpGet">
    <wsdl:operation name="Browse">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, the postcode areas in the UK. Use the ID with the ByArea method to get list of the localities in the area.</documentation>
      <wsdl:input message="tns:BrowseHttpGetIn" />
      <wsdl:output message="tns:BrowseHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Browse_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As Browse but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Browse_DataSetHttpGetIn" />
      <wsdl:output message="tns:Browse_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByArea">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the localities in the given postcode area. Use the ID with the ByLocalityKey method to get a list of the streets in the locality.</documentation>
      <wsdl:input message="tns:ByAreaHttpGetIn" />
      <wsdl:output message="tns:ByAreaHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByArea_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByArea but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByArea_DataSetHttpGetIn" />
      <wsdl:output message="tns:ByArea_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties in the given postcode. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByPostcodeHttpGetIn" />
      <wsdl:output message="tns:ByPostcodeHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByPostcode_DataSetHttpGetIn" />
      <wsdl:output message="tns:ByPostcode_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcode_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPostcode but the data is returned in the CombinedResults structure. If only one property would be returned by the method, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByPostcode_CombinedHttpGetIn" />
      <wsdl:output message="tns:ByPostcode_CombinedHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcodeFiltered">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties in the given postcode that also match the building name or number. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByPostcodeFilteredHttpGetIn" />
      <wsdl:output message="tns:ByPostcodeFilteredHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcodeFiltered_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPostcodeFiltered but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByPostcodeFiltered_DataSetHttpGetIn" />
      <wsdl:output message="tns:ByPostcodeFiltered_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByCoordinates">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties in the given coordinate rectangle. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByCoordinatesHttpGetIn" />
      <wsdl:output message="tns:ByCoordinatesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByCoordinates_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByCoordinates but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByCoordinates_DataSetHttpGetIn" />
      <wsdl:output message="tns:ByCoordinates_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOutcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning a list of the localities in the the given postcode outcode. Use the ID with the ByLocalityKey method to get a list of the streets in that locality.</documentation>
      <wsdl:input message="tns:ByOutcodeHttpGetIn" />
      <wsdl:output message="tns:ByOutcodeHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOutcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByOutcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByOutcode_DataSetHttpGetIn" />
      <wsdl:output message="tns:ByOutcode_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching organisations. The town parameter can be blank and the organisation name is automatically wildcarded (e.g. "Boot" matches "Boots" and "Boots the chemists"). Use the fuzzy search to search phonetically. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByOrganisationHttpGetIn" />
      <wsdl:output message="tns:ByOrganisationHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByOrganisation but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByOrganisation_DataSetHttpGetIn" />
      <wsdl:output message="tns:ByOrganisation_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByOrganisation but the data is returned in the CombinedResults structure. If only one property would be returned by the method, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByOrganisation_CombinedHttpGetIn" />
      <wsdl:output message="tns:ByOrganisation_CombinedHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching streets. The town parameter can be the name of the town or the first part of the postcode (e.g. "LS, LS2, Leeds"). The street name is automatically wildcarded (e.g. "High" matches "High Street" and "High Way"). Use the fuzzy search to search phonetically. Use the ID with the ByStreetKey method to get a list of the properties in this street.</documentation>
      <wsdl:input message="tns:ByStreetHttpGetIn" />
      <wsdl:output message="tns:ByStreetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreet_Dataset">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreet but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByStreet_DatasetHttpGetIn" />
      <wsdl:output message="tns:ByStreet_DatasetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetFiltered">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching properties. Unlike the ByStreet method, this returns properties matching the building parameter in matching streets. The town parameter can be the name of the town or the first part of the postcode (e.g. "LS, LS2, Leeds"). The street name is automatically wildcarded (e.g. "High" matches "High Street" and "High Way"). Use the fuzzy search to search phonetically. Use the ID with the ByStreetKey method to get a list of the properties in this street.</documentation>
      <wsdl:input message="tns:ByStreetFilteredHttpGetIn" />
      <wsdl:output message="tns:ByStreetFilteredHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetFiltered_Dataset">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreetFiltered but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByStreetFiltered_DatasetHttpGetIn" />
      <wsdl:output message="tns:ByStreetFiltered_DatasetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreet_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreet but the data is returned in the CombinedResults structure. If only one street is found the method will return the list of properties. However, if only one property is listed, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByStreet_CombinedHttpGetIn" />
      <wsdl:output message="tns:ByStreet_CombinedHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByBuilding">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching properties. The town parameter should be the name of the town (e.g. "Leeds"). The building name is automatically wildcarded (e.g. "Hill" matches "Hilltop" and "Hill View").</documentation>
      <wsdl:input message="tns:ByBuildingHttpGetIn" />
      <wsdl:output message="tns:ByBuildingHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByBuilding_Dataset">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByBuilding but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByBuilding_DatasetHttpGetIn" />
      <wsdl:output message="tns:ByBuilding_DatasetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByBuilding_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByBuilding but the data is returned in the CombinedResults structure. If only one street is found the method will return the list of properties. However, if only one property is listed, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByBuilding_CombinedHttpGetIn" />
      <wsdl:output message="tns:ByBuilding_CombinedHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns all the properties in the street. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByStreetKeyHttpGetIn" />
      <wsdl:output message="tns:ByStreetKeyHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreetKey but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByStreetKey_DataSetHttpGetIn" />
      <wsdl:output message="tns:ByStreetKey_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreetKey but the data is returned in the CombinedResults structure. If only one property would be returned by the method, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByStreetKey_CombinedHttpGetIn" />
      <wsdl:output message="tns:ByStreetKey_CombinedHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByLocalityKey">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns all the streets in the given locality. Use the ID with the ByStreetKey method to get a list of all the properties in the street.</documentation>
      <wsdl:input message="tns:ByLocalityKeyHttpGetIn" />
      <wsdl:output message="tns:ByLocalityKeyHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByLocalityKey_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByLocalityKey but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByLocalityKey_DataSetHttpGetIn" />
      <wsdl:output message="tns:ByLocalityKey_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByLocation">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns the matching localities relating to the location (which can be a locality key, outcode, postcode or town name). Use the ID with the Location method to get the grid references or with StoredNearest (Origin).</documentation>
      <wsdl:input message="tns:ByLocationHttpGetIn" />
      <wsdl:output message="tns:ByLocationHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByLocation_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByLocation but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByLocation_DataSetHttpGetIn" />
      <wsdl:output message="tns:ByLocation_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Location">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns the coordinates for the given Id (from ByLocation)</documentation>
      <wsdl:input message="tns:LocationHttpGetIn" />
      <wsdl:output message="tns:LocationHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Location_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As Location but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Location_DataSetHttpGetIn" />
      <wsdl:output message="tns:Location_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByFreeText">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties matching the freetext string. The freetext string can contain a building, street, town, postcode or partial postcode. Most combinations are valid although they must be separated by commas and in that order. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByFreeTextHttpGetIn" />
      <wsdl:output message="tns:ByFreeTextHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByFreeText_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByFreeText but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByFreeText_DataSetHttpGetIn" />
      <wsdl:output message="tns:ByFreeText_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByFreeText_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByFreeText but the data is returned in the CombinedResults structure. If only one property would be returned by the method, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByFreeText_CombinedHttpGetIn" />
      <wsdl:output message="tns:ByFreeText_CombinedHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="FetchAddress_Simple">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As FetchAddress but does not use enumerated type for input parameters, use strings instead</documentation>
      <wsdl:input message="tns:FetchAddress_SimpleHttpGetIn" />
      <wsdl:output message="tns:FetchAddress_SimpleHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="FetchAddress">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the address corresponding to the ID parameter. Use the ContentType parameter to select which fields to return. Use the Language parameter to select which language to return the address in.</documentation>
      <wsdl:input message="tns:FetchAddressHttpGetIn" />
      <wsdl:output message="tns:FetchAddressHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="FastAddress">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning an address matching the Postcode and Building. The Building parameter represents the building name or number and is automatically wildcarded (e.g. "Eni" matches "Enigma House") and can be blank and if the postcode contains more than one property, the first will be returned. Use the ContentType parameter to select which fields to return. Use the Language parameter to select which language to return the address in.</documentation>
      <wsdl:input message="tns:FastAddressHttpGetIn" />
      <wsdl:output message="tns:FastAddressHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="FetchAddress_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As FetchAddress but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:FetchAddress_DataSetHttpGetIn" />
      <wsdl:output message="tns:FetchAddress_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="FastAddress_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As FastAddress but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:FastAddress_DataSetHttpGetIn" />
      <wsdl:output message="tns:FastAddress_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Distance">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Calculates the distance in metres between the origin and destination postcodes. Any errors will be raised as a SOAP exception.</documentation>
      <wsdl:input message="tns:DistanceHttpGetIn" />
      <wsdl:output message="tns:DistanceHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestPostcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the coordinates of the Origin postcode and the array of Destination postcodes. The distance between the Origin and each Destination is calculated and the nearest Items (e.g. 2 returns the nearest 2 Destinations) are returned along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:NearestPostcodeHttpGetIn" />
      <wsdl:output message="tns:NearestPostcodeHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestPostcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As NearestPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:NearestPostcode_DataSetHttpGetIn" />
      <wsdl:output message="tns:NearestPostcode_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Nearest">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the coordinates of the Origin postcode and the array of Destination postcodes. The distance between the Origin and each Destination is calculated and the nearest Items (e.g. 2 returns the nearest 2 Destinations) are returned along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:NearestHttpGetIn" />
      <wsdl:output message="tns:NearestHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Nearest_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As Nearest but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Nearest_DataSetHttpGetIn" />
      <wsdl:output message="tns:Nearest_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="StoredNearest">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the coordinates of the Origin postcode against a set of postcodes that have already been uploaded against the License Key. The distance between the Origin and each uploaded destination is calculated and the nearest Items (e.g. 2 returns the nearest 2 destinations) are returned along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:StoredNearestHttpGetIn" />
      <wsdl:output message="tns:StoredNearestHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="StoredNearest_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StoredNearest but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StoredNearest_DataSetHttpGetIn" />
      <wsdl:output message="tns:StoredNearest_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestRadial">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Extends the Nearest method with support for radial restrictions (i.e. returns only the items within X of the origin.</documentation>
      <wsdl:input message="tns:NearestRadialHttpGetIn" />
      <wsdl:output message="tns:NearestRadialHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestRadial_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As NearestRadial but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:NearestRadial_DataSetHttpGetIn" />
      <wsdl:output message="tns:NearestRadial_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="StoredNearestRadial">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Extends the StoredNearest method with support for radial restrictions (i.e. returns only the items within X of the origin.</documentation>
      <wsdl:input message="tns:StoredNearestRadialHttpGetIn" />
      <wsdl:output message="tns:StoredNearestRadialHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="StoredNearestRadial_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StoredNearestRadial but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StoredNearestRadial_DataSetHttpGetIn" />
      <wsdl:output message="tns:StoredNearestRadial_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Changes">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, checking all the properties that have been fetched against the account between the StartDate and EndDate and returns information about which properties have been changed.</documentation>
      <wsdl:input message="tns:ChangesHttpGetIn" />
      <wsdl:output message="tns:ChangesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Changes_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As Changes but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Changes_DataSetHttpGetIn" />
      <wsdl:output message="tns:Changes_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Cleanse">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties matching the given address elements. As many of the address elements should be provided along with the formatted Address parameter which is used to assess the confidence of the match. The confience property reflects the confidence of the result (the results are ranked in descending order of confidence). Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:CleanseHttpGetIn" />
      <wsdl:output message="tns:CleanseHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Cleanse_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Cleanse_DataSetHttpGetIn" />
      <wsdl:output message="tns:Cleanse_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="BatchCleanse">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties matching the given addresses. The addresses should be supplied in the Addresses array with one address per record. Within each record, address lines should be separated by commas. The results are provided in the order they are suppled and batch sizes are limited to 1000 addresses per batch.</documentation>
      <wsdl:input message="tns:BatchCleanseHttpGetIn" />
      <wsdl:output message="tns:BatchCleanseHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="BatchCleanse_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As BatchCleanse but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:BatchCleanse_DataSetHttpGetIn" />
      <wsdl:output message="tns:BatchCleanse_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="BatchFetch">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties matching the given IDs. The IDs should be listed in the array. The results are provided in the order they are suppled.</documentation>
      <wsdl:input message="tns:BatchFetchHttpGetIn" />
      <wsdl:output message="tns:BatchFetchHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="BatchFetch_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As BatchFetch but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:BatchFetch_DataSetHttpGetIn" />
      <wsdl:output message="tns:BatchFetch_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByPostcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the number of delivery points for the matching postcodes. A full postcode is required.</documentation>
      <wsdl:input message="tns:StatisticsByPostcodeHttpGetIn" />
      <wsdl:output message="tns:StatisticsByPostcodeHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByPostcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StatisticsByPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StatisticsByPostcode_DataSetHttpGetIn" />
      <wsdl:output message="tns:StatisticsByPostcode_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByOutcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the number of delivery points for the matching postcodes.</documentation>
      <wsdl:input message="tns:StatisticsByOutcodeHttpGetIn" />
      <wsdl:output message="tns:StatisticsByOutcodeHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByOutcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StatisticsByPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StatisticsByOutcode_DataSetHttpGetIn" />
      <wsdl:output message="tns:StatisticsByOutcode_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsBySector">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the number of delivery points for the matching postcodes. A full postcode is required.</documentation>
      <wsdl:input message="tns:StatisticsBySectorHttpGetIn" />
      <wsdl:output message="tns:StatisticsBySectorHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsBySector_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StatisticsBySector but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StatisticsBySector_DataSetHttpGetIn" />
      <wsdl:output message="tns:StatisticsBySector_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByStreetKey">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the number of delivery points for the matching postcodes. A full or partial postcode can be supplied.</documentation>
      <wsdl:input message="tns:StatisticsByStreetKeyHttpGetIn" />
      <wsdl:output message="tns:StatisticsByStreetKeyHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByStreetKey_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StatisticsByStreetKey but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StatisticsByStreetKey_DataSetHttpGetIn" />
      <wsdl:output message="tns:StatisticsByStreetKey_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestOutcodes">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the nearest outcodes (with coordinates) to the given coordinates. The distance between the point of origin and centre of the outcode is calculated and the nearest Items (e.g. 2 returns the nearest 2 Destinations) are returned, within Radius metres of the origin, along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:NearestOutcodesHttpGetIn" />
      <wsdl:output message="tns:NearestOutcodesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestOutcodes_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As NearestOutcodes but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:NearestOutcodes_DataSetHttpGetIn" />
      <wsdl:output message="tns:NearestOutcodes_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestSectors">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the nearest sectors (with coordinates) to the given coordinates. The distance between the point of origin and centre of the outcode is calculated and the nearest Items (e.g. 2 returns the nearest 2 Destinations) are returned, within Radius metres of the origin, along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:NearestSectorsHttpGetIn" />
      <wsdl:output message="tns:NearestSectorsHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestSectors_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As NearestSectors but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:NearestSectors_DataSetHttpGetIn" />
      <wsdl:output message="tns:NearestSectors_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPoBox">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching addresses with the given PO box. The town parameter can be blank or a partial postcode. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByPoBoxHttpGetIn" />
      <wsdl:output message="tns:ByPoBoxHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPoBox_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPoBox but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByPoBox_DataSetHttpGetIn" />
      <wsdl:output message="tns:ByPoBox_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodePostcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the coordinates for the postcode. If the building property is provided, the coordinates will relate to the individual property. If the Accuracy parameter is set to "High" then coordinates accurate to 1 metre are returned, otherwise coordinates accurate to 100m are returned.</documentation>
      <wsdl:input message="tns:GeocodePostcodeHttpGetIn" />
      <wsdl:output message="tns:GeocodePostcodeHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodePostcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As GeocodePostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:GeocodePostcode_DataSetHttpGetIn" />
      <wsdl:output message="tns:GeocodePostcode_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddressId">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the coordinates for the property. If the Accuracy parameter is set to "High" then coordinates accurate to 1 metre are returned, otherwise coordinates accurate to 100m are returned.</documentation>
      <wsdl:input message="tns:GeocodeAddressIdHttpGetIn" />
      <wsdl:output message="tns:GeocodeAddressIdHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddressId_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As GeocodeAddressId but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:GeocodeAddressId_DataSetHttpGetIn" />
      <wsdl:output message="tns:GeocodeAddressId_DataSetHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddress">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the coordinates for the property. If the Accuracy parameter is set to "High" then coordinates accurate to 1 metre are returned, otherwise coordinates accurate to 100m are returned.</documentation>
      <wsdl:input message="tns:GeocodeAddressHttpGetIn" />
      <wsdl:output message="tns:GeocodeAddressHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddress_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As GeocodeAddress but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:GeocodeAddress_DataSetHttpGetIn" />
      <wsdl:output message="tns:GeocodeAddress_DataSetHttpGetOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="LookupUKHttpPost">
    <wsdl:operation name="Browse">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, the postcode areas in the UK. Use the ID with the ByArea method to get list of the localities in the area.</documentation>
      <wsdl:input message="tns:BrowseHttpPostIn" />
      <wsdl:output message="tns:BrowseHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Browse_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As Browse but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Browse_DataSetHttpPostIn" />
      <wsdl:output message="tns:Browse_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByArea">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the localities in the given postcode area. Use the ID with the ByLocalityKey method to get a list of the streets in the locality.</documentation>
      <wsdl:input message="tns:ByAreaHttpPostIn" />
      <wsdl:output message="tns:ByAreaHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByArea_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByArea but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByArea_DataSetHttpPostIn" />
      <wsdl:output message="tns:ByArea_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties in the given postcode. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByPostcodeHttpPostIn" />
      <wsdl:output message="tns:ByPostcodeHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByPostcode_DataSetHttpPostIn" />
      <wsdl:output message="tns:ByPostcode_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcode_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPostcode but the data is returned in the CombinedResults structure. If only one property would be returned by the method, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByPostcode_CombinedHttpPostIn" />
      <wsdl:output message="tns:ByPostcode_CombinedHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcodeFiltered">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties in the given postcode that also match the building name or number. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByPostcodeFilteredHttpPostIn" />
      <wsdl:output message="tns:ByPostcodeFilteredHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPostcodeFiltered_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPostcodeFiltered but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByPostcodeFiltered_DataSetHttpPostIn" />
      <wsdl:output message="tns:ByPostcodeFiltered_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByCoordinates">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties in the given coordinate rectangle. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByCoordinatesHttpPostIn" />
      <wsdl:output message="tns:ByCoordinatesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByCoordinates_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByCoordinates but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByCoordinates_DataSetHttpPostIn" />
      <wsdl:output message="tns:ByCoordinates_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOutcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning a list of the localities in the the given postcode outcode. Use the ID with the ByLocalityKey method to get a list of the streets in that locality.</documentation>
      <wsdl:input message="tns:ByOutcodeHttpPostIn" />
      <wsdl:output message="tns:ByOutcodeHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOutcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByOutcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByOutcode_DataSetHttpPostIn" />
      <wsdl:output message="tns:ByOutcode_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching organisations. The town parameter can be blank and the organisation name is automatically wildcarded (e.g. "Boot" matches "Boots" and "Boots the chemists"). Use the fuzzy search to search phonetically. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByOrganisationHttpPostIn" />
      <wsdl:output message="tns:ByOrganisationHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByOrganisation but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByOrganisation_DataSetHttpPostIn" />
      <wsdl:output message="tns:ByOrganisation_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByOrganisation but the data is returned in the CombinedResults structure. If only one property would be returned by the method, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByOrganisation_CombinedHttpPostIn" />
      <wsdl:output message="tns:ByOrganisation_CombinedHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching streets. The town parameter can be the name of the town or the first part of the postcode (e.g. "LS, LS2, Leeds"). The street name is automatically wildcarded (e.g. "High" matches "High Street" and "High Way"). Use the fuzzy search to search phonetically. Use the ID with the ByStreetKey method to get a list of the properties in this street.</documentation>
      <wsdl:input message="tns:ByStreetHttpPostIn" />
      <wsdl:output message="tns:ByStreetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreet_Dataset">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreet but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByStreet_DatasetHttpPostIn" />
      <wsdl:output message="tns:ByStreet_DatasetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetFiltered">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching properties. Unlike the ByStreet method, this returns properties matching the building parameter in matching streets. The town parameter can be the name of the town or the first part of the postcode (e.g. "LS, LS2, Leeds"). The street name is automatically wildcarded (e.g. "High" matches "High Street" and "High Way"). Use the fuzzy search to search phonetically. Use the ID with the ByStreetKey method to get a list of the properties in this street.</documentation>
      <wsdl:input message="tns:ByStreetFilteredHttpPostIn" />
      <wsdl:output message="tns:ByStreetFilteredHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetFiltered_Dataset">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreetFiltered but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByStreetFiltered_DatasetHttpPostIn" />
      <wsdl:output message="tns:ByStreetFiltered_DatasetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreet_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreet but the data is returned in the CombinedResults structure. If only one street is found the method will return the list of properties. However, if only one property is listed, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByStreet_CombinedHttpPostIn" />
      <wsdl:output message="tns:ByStreet_CombinedHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByBuilding">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching properties. The town parameter should be the name of the town (e.g. "Leeds"). The building name is automatically wildcarded (e.g. "Hill" matches "Hilltop" and "Hill View").</documentation>
      <wsdl:input message="tns:ByBuildingHttpPostIn" />
      <wsdl:output message="tns:ByBuildingHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByBuilding_Dataset">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByBuilding but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByBuilding_DatasetHttpPostIn" />
      <wsdl:output message="tns:ByBuilding_DatasetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByBuilding_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByBuilding but the data is returned in the CombinedResults structure. If only one street is found the method will return the list of properties. However, if only one property is listed, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByBuilding_CombinedHttpPostIn" />
      <wsdl:output message="tns:ByBuilding_CombinedHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns all the properties in the street. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByStreetKeyHttpPostIn" />
      <wsdl:output message="tns:ByStreetKeyHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreetKey but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByStreetKey_DataSetHttpPostIn" />
      <wsdl:output message="tns:ByStreetKey_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByStreetKey but the data is returned in the CombinedResults structure. If only one property would be returned by the method, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByStreetKey_CombinedHttpPostIn" />
      <wsdl:output message="tns:ByStreetKey_CombinedHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByLocalityKey">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns all the streets in the given locality. Use the ID with the ByStreetKey method to get a list of all the properties in the street.</documentation>
      <wsdl:input message="tns:ByLocalityKeyHttpPostIn" />
      <wsdl:output message="tns:ByLocalityKeyHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByLocalityKey_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByLocalityKey but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByLocalityKey_DataSetHttpPostIn" />
      <wsdl:output message="tns:ByLocalityKey_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByLocation">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns the matching localities relating to the location (which can be a locality key, outcode, postcode or town name). Use the ID with the Location method to get the grid references or with StoredNearest (Origin).</documentation>
      <wsdl:input message="tns:ByLocationHttpPostIn" />
      <wsdl:output message="tns:ByLocationHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByLocation_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByLocation but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByLocation_DataSetHttpPostIn" />
      <wsdl:output message="tns:ByLocation_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Location">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns the coordinates for the given Id (from ByLocation)</documentation>
      <wsdl:input message="tns:LocationHttpPostIn" />
      <wsdl:output message="tns:LocationHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Location_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As Location but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Location_DataSetHttpPostIn" />
      <wsdl:output message="tns:Location_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByFreeText">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties matching the freetext string. The freetext string can contain a building, street, town, postcode or partial postcode. Most combinations are valid although they must be separated by commas and in that order. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByFreeTextHttpPostIn" />
      <wsdl:output message="tns:ByFreeTextHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByFreeText_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByFreeText but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByFreeText_DataSetHttpPostIn" />
      <wsdl:output message="tns:ByFreeText_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByFreeText_Combined">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByFreeText but the data is returned in the CombinedResults structure. If only one property would be returned by the method, the address is automatically selected and returned instead of the interim results.</documentation>
      <wsdl:input message="tns:ByFreeText_CombinedHttpPostIn" />
      <wsdl:output message="tns:ByFreeText_CombinedHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="FetchAddress_Simple">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As FetchAddress but does not use enumerated type for input parameters, use strings instead</documentation>
      <wsdl:input message="tns:FetchAddress_SimpleHttpPostIn" />
      <wsdl:output message="tns:FetchAddress_SimpleHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="FetchAddress">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the address corresponding to the ID parameter. Use the ContentType parameter to select which fields to return. Use the Language parameter to select which language to return the address in.</documentation>
      <wsdl:input message="tns:FetchAddressHttpPostIn" />
      <wsdl:output message="tns:FetchAddressHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="FastAddress">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning an address matching the Postcode and Building. The Building parameter represents the building name or number and is automatically wildcarded (e.g. "Eni" matches "Enigma House") and can be blank and if the postcode contains more than one property, the first will be returned. Use the ContentType parameter to select which fields to return. Use the Language parameter to select which language to return the address in.</documentation>
      <wsdl:input message="tns:FastAddressHttpPostIn" />
      <wsdl:output message="tns:FastAddressHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="FetchAddress_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As FetchAddress but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:FetchAddress_DataSetHttpPostIn" />
      <wsdl:output message="tns:FetchAddress_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="FastAddress_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As FastAddress but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:FastAddress_DataSetHttpPostIn" />
      <wsdl:output message="tns:FastAddress_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Distance">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Calculates the distance in metres between the origin and destination postcodes. Any errors will be raised as a SOAP exception.</documentation>
      <wsdl:input message="tns:DistanceHttpPostIn" />
      <wsdl:output message="tns:DistanceHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestPostcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the coordinates of the Origin postcode and the array of Destination postcodes. The distance between the Origin and each Destination is calculated and the nearest Items (e.g. 2 returns the nearest 2 Destinations) are returned along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:NearestPostcodeHttpPostIn" />
      <wsdl:output message="tns:NearestPostcodeHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestPostcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As NearestPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:NearestPostcode_DataSetHttpPostIn" />
      <wsdl:output message="tns:NearestPostcode_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Nearest">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the coordinates of the Origin postcode and the array of Destination postcodes. The distance between the Origin and each Destination is calculated and the nearest Items (e.g. 2 returns the nearest 2 Destinations) are returned along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:NearestHttpPostIn" />
      <wsdl:output message="tns:NearestHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Nearest_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As Nearest but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Nearest_DataSetHttpPostIn" />
      <wsdl:output message="tns:Nearest_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="StoredNearest">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the coordinates of the Origin postcode against a set of postcodes that have already been uploaded against the License Key. The distance between the Origin and each uploaded destination is calculated and the nearest Items (e.g. 2 returns the nearest 2 destinations) are returned along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:StoredNearestHttpPostIn" />
      <wsdl:output message="tns:StoredNearestHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="StoredNearest_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StoredNearest but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StoredNearest_DataSetHttpPostIn" />
      <wsdl:output message="tns:StoredNearest_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestRadial">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Extends the Nearest method with support for radial restrictions (i.e. returns only the items within X of the origin.</documentation>
      <wsdl:input message="tns:NearestRadialHttpPostIn" />
      <wsdl:output message="tns:NearestRadialHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestRadial_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As NearestRadial but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:NearestRadial_DataSetHttpPostIn" />
      <wsdl:output message="tns:NearestRadial_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="StoredNearestRadial">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Extends the StoredNearest method with support for radial restrictions (i.e. returns only the items within X of the origin.</documentation>
      <wsdl:input message="tns:StoredNearestRadialHttpPostIn" />
      <wsdl:output message="tns:StoredNearestRadialHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="StoredNearestRadial_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StoredNearestRadial but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StoredNearestRadial_DataSetHttpPostIn" />
      <wsdl:output message="tns:StoredNearestRadial_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Changes">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, checking all the properties that have been fetched against the account between the StartDate and EndDate and returns information about which properties have been changed.</documentation>
      <wsdl:input message="tns:ChangesHttpPostIn" />
      <wsdl:output message="tns:ChangesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Changes_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As Changes but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Changes_DataSetHttpPostIn" />
      <wsdl:output message="tns:Changes_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Cleanse">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties matching the given address elements. As many of the address elements should be provided along with the formatted Address parameter which is used to assess the confidence of the match. The confience property reflects the confidence of the result (the results are ranked in descending order of confidence). Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:CleanseHttpPostIn" />
      <wsdl:output message="tns:CleanseHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Cleanse_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:Cleanse_DataSetHttpPostIn" />
      <wsdl:output message="tns:Cleanse_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="BatchCleanse">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties matching the given addresses. The addresses should be supplied in the Addresses array with one address per record. Within each record, address lines should be separated by commas. The results are provided in the order they are suppled and batch sizes are limited to 1000 addresses per batch.</documentation>
      <wsdl:input message="tns:BatchCleanseHttpPostIn" />
      <wsdl:output message="tns:BatchCleanseHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="BatchCleanse_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As BatchCleanse but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:BatchCleanse_DataSetHttpPostIn" />
      <wsdl:output message="tns:BatchCleanse_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="BatchFetch">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the properties matching the given IDs. The IDs should be listed in the array. The results are provided in the order they are suppled.</documentation>
      <wsdl:input message="tns:BatchFetchHttpPostIn" />
      <wsdl:output message="tns:BatchFetchHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="BatchFetch_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As BatchFetch but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:BatchFetch_DataSetHttpPostIn" />
      <wsdl:output message="tns:BatchFetch_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByPostcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the number of delivery points for the matching postcodes. A full postcode is required.</documentation>
      <wsdl:input message="tns:StatisticsByPostcodeHttpPostIn" />
      <wsdl:output message="tns:StatisticsByPostcodeHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByPostcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StatisticsByPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StatisticsByPostcode_DataSetHttpPostIn" />
      <wsdl:output message="tns:StatisticsByPostcode_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByOutcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the number of delivery points for the matching postcodes.</documentation>
      <wsdl:input message="tns:StatisticsByOutcodeHttpPostIn" />
      <wsdl:output message="tns:StatisticsByOutcodeHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByOutcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StatisticsByPostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StatisticsByOutcode_DataSetHttpPostIn" />
      <wsdl:output message="tns:StatisticsByOutcode_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsBySector">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the number of delivery points for the matching postcodes. A full postcode is required.</documentation>
      <wsdl:input message="tns:StatisticsBySectorHttpPostIn" />
      <wsdl:output message="tns:StatisticsBySectorHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsBySector_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StatisticsBySector but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StatisticsBySector_DataSetHttpPostIn" />
      <wsdl:output message="tns:StatisticsBySector_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByStreetKey">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the number of delivery points for the matching postcodes. A full or partial postcode can be supplied.</documentation>
      <wsdl:input message="tns:StatisticsByStreetKeyHttpPostIn" />
      <wsdl:output message="tns:StatisticsByStreetKeyHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="StatisticsByStreetKey_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As StatisticsByStreetKey but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:StatisticsByStreetKey_DataSetHttpPostIn" />
      <wsdl:output message="tns:StatisticsByStreetKey_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestOutcodes">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the nearest outcodes (with coordinates) to the given coordinates. The distance between the point of origin and centre of the outcode is calculated and the nearest Items (e.g. 2 returns the nearest 2 Destinations) are returned, within Radius metres of the origin, along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:NearestOutcodesHttpPostIn" />
      <wsdl:output message="tns:NearestOutcodesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestOutcodes_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As NearestOutcodes but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:NearestOutcodes_DataSetHttpPostIn" />
      <wsdl:output message="tns:NearestOutcodes_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestSectors">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, working out the nearest sectors (with coordinates) to the given coordinates. The distance between the point of origin and centre of the outcode is calculated and the nearest Items (e.g. 2 returns the nearest 2 Destinations) are returned, within Radius metres of the origin, along with the distance in the specified Units.</documentation>
      <wsdl:input message="tns:NearestSectorsHttpPostIn" />
      <wsdl:output message="tns:NearestSectorsHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="NearestSectors_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As NearestSectors but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:NearestSectors_DataSetHttpPostIn" />
      <wsdl:output message="tns:NearestSectors_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPoBox">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning all the matching addresses with the given PO box. The town parameter can be blank or a partial postcode. Use the ID with the FetchAddress method to get a complete formatted address.</documentation>
      <wsdl:input message="tns:ByPoBoxHttpPostIn" />
      <wsdl:output message="tns:ByPoBoxHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ByPoBox_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As ByPoBox but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:ByPoBox_DataSetHttpPostIn" />
      <wsdl:output message="tns:ByPoBox_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodePostcode">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the coordinates for the postcode. If the building property is provided, the coordinates will relate to the individual property. If the Accuracy parameter is set to "High" then coordinates accurate to 1 metre are returned, otherwise coordinates accurate to 100m are returned.</documentation>
      <wsdl:input message="tns:GeocodePostcodeHttpPostIn" />
      <wsdl:output message="tns:GeocodePostcodeHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodePostcode_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As GeocodePostcode but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:GeocodePostcode_DataSetHttpPostIn" />
      <wsdl:output message="tns:GeocodePostcode_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddressId">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the coordinates for the property. If the Accuracy parameter is set to "High" then coordinates accurate to 1 metre are returned, otherwise coordinates accurate to 100m are returned.</documentation>
      <wsdl:input message="tns:GeocodeAddressIdHttpPostIn" />
      <wsdl:output message="tns:GeocodeAddressIdHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddressId_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As GeocodeAddressId but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:GeocodeAddressId_DataSetHttpPostIn" />
      <wsdl:output message="tns:GeocodeAddressId_DataSetHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddress">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Queries the database, returning the coordinates for the property. If the Accuracy parameter is set to "High" then coordinates accurate to 1 metre are returned, otherwise coordinates accurate to 100m are returned.</documentation>
      <wsdl:input message="tns:GeocodeAddressHttpPostIn" />
      <wsdl:output message="tns:GeocodeAddressHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddress_DataSet">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">As GeocodeAddress but the data is returned in a dataset.</documentation>
      <wsdl:input message="tns:GeocodeAddress_DataSetHttpPostIn" />
      <wsdl:output message="tns:GeocodeAddress_DataSetHttpPostOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LookupUKSoap" type="tns:LookupUKSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="Browse">
      <soap:operation soapAction="PostcodeAnywhere2/Browse" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Browse_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/Browse_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByArea">
      <soap:operation soapAction="PostcodeAnywhere2/ByArea" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByArea_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/ByArea_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcode">
      <soap:operation soapAction="PostcodeAnywhere2/ByPostcode" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcode_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/ByPostcode_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcode_Combined">
      <soap:operation soapAction="PostcodeAnywhere2/ByPostcode_Combined" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcodeFiltered">
      <soap:operation soapAction="PostcodeAnywhere2/ByPostcodeFiltered" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcodeFiltered_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/ByPostcodeFiltered_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByCoordinates">
      <soap:operation soapAction="PostcodeAnywhere2/ByCoordinates" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByCoordinates_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/ByCoordinates_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOutcode">
      <soap:operation soapAction="PostcodeAnywhere2/ByOutcode" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOutcode_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/ByOutcode_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation">
      <soap:operation soapAction="PostcodeAnywhere2/ByOrganisation" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/ByOrganisation_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation_Combined">
      <soap:operation soapAction="PostcodeAnywhere2/ByOrganisation_Combined" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreet">
      <soap:operation soapAction="PostcodeAnywhere2/ByStreet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreet_Dataset">
      <soap:operation soapAction="PostcodeAnywhere2/ByStreet_Dataset" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetFiltered">
      <soap:operation soapAction="PostcodeAnywhere2/ByStreetFiltered" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetFiltered_Dataset">
      <soap:operation soapAction="PostcodeAnywhere2/ByStreetFiltered_Dataset" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreet_Combined">
      <soap:operation soapAction="PostcodeAnywhere2/ByStreet_Combined" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByBuilding">
      <soap:operation soapAction="PostcodeAnywhere2/ByBuilding" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByBuilding_Dataset">
      <soap:operation soapAction="PostcodeAnywhere2/ByBuilding_Dataset" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByBuilding_Combined">
      <soap:operation soapAction="PostcodeAnywhere2/ByBuilding_Combined" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey">
      <soap:operation soapAction="PostcodeAnywhere2/ByStreetKey" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/ByStreetKey_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey_Combined">
      <soap:operation soapAction="PostcodeAnywhere2/ByStreetKey_Combined" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByLocalityKey">
      <soap:operation soapAction="PostcodeAnywhere2/ByLocalityKey" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByLocalityKey_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/ByLocalityKey_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByLocation">
      <soap:operation soapAction="PostcodeAnywhere2/ByLocation" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByLocation_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/ByLocation_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Location">
      <soap:operation soapAction="PostcodeAnywhere2/Location" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Location_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/Location_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByFreeText">
      <soap:operation soapAction="PostcodeAnywhere2/ByFreeText" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByFreeText_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/ByFreeText_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByFreeText_Combined">
      <soap:operation soapAction="PostcodeAnywhere2/ByFreeText_Combined" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FetchAddress_Simple">
      <soap:operation soapAction="PostcodeAnywhere2/FetchAddress_Simple" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FetchAddress">
      <soap:operation soapAction="PostcodeAnywhere2/FetchAddress" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FastAddress">
      <soap:operation soapAction="PostcodeAnywhere2/FastAddress" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FetchAddress_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/FetchAddress_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FastAddress_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/FastAddress_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Distance">
      <soap:operation soapAction="PostcodeAnywhere2/Distance" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestPostcode">
      <soap:operation soapAction="PostcodeAnywhere2/NearestPostcode" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestPostcode_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/NearestPostcode_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Nearest">
      <soap:operation soapAction="PostcodeAnywhere2/Nearest" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Nearest_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/Nearest_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoredNearest">
      <soap:operation soapAction="PostcodeAnywhere2/StoredNearest" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoredNearest_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/StoredNearest_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestRadial">
      <soap:operation soapAction="PostcodeAnywhere2/NearestRadial" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestRadial_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/NearestRadial_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoredNearestRadial">
      <soap:operation soapAction="PostcodeAnywhere2/StoredNearestRadial" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoredNearestRadial_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/StoredNearestRadial_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Changes">
      <soap:operation soapAction="PostcodeAnywhere2/Changes" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Changes_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/Changes_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Cleanse">
      <soap:operation soapAction="PostcodeAnywhere2/Cleanse" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Cleanse_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/Cleanse_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BatchCleanse">
      <soap:operation soapAction="PostcodeAnywhere2/BatchCleanse" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BatchCleanse_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/BatchCleanse_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BatchFetch">
      <soap:operation soapAction="PostcodeAnywhere2/BatchFetch" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BatchFetch_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/BatchFetch_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByPostcode">
      <soap:operation soapAction="PostcodeAnywhere2/StatisticsByPostcode" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByPostcode_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/StatisticsByPostcode_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByOutcode">
      <soap:operation soapAction="PostcodeAnywhere2/StatisticsByOutcode" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByOutcode_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/StatisticsByOutcode_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsBySector">
      <soap:operation soapAction="PostcodeAnywhere2/StatisticsBySector" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsBySector_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/StatisticsBySector_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByStreetKey">
      <soap:operation soapAction="PostcodeAnywhere2/StatisticsByStreetKey" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByStreetKey_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/StatisticsByStreetKey_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestOutcodes">
      <soap:operation soapAction="PostcodeAnywhere2/NearestOutcodes" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestOutcodes_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/NearestOutcodes_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestSectors">
      <soap:operation soapAction="PostcodeAnywhere2/NearestSectors" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestSectors_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/NearestSectors_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPoBox">
      <soap:operation soapAction="PostcodeAnywhere2/ByPoBox" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPoBox_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/ByPoBox_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodePostcode">
      <soap:operation soapAction="PostcodeAnywhere2/GeocodePostcode" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodePostcode_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/GeocodePostcode_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddressId">
      <soap:operation soapAction="PostcodeAnywhere2/GeocodeAddressId" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddressId_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/GeocodeAddressId_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddress">
      <soap:operation soapAction="PostcodeAnywhere2/GeocodeAddress" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddress_DataSet">
      <soap:operation soapAction="PostcodeAnywhere2/GeocodeAddress_DataSet" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LookupUKHttpGet" type="tns:LookupUKHttpGet">
    <http:binding verb="GET" />
    <wsdl:operation name="Browse">
      <http:operation location="/Browse" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Browse_DataSet">
      <http:operation location="/Browse_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByArea">
      <http:operation location="/ByArea" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByArea_DataSet">
      <http:operation location="/ByArea_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcode">
      <http:operation location="/ByPostcode" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcode_DataSet">
      <http:operation location="/ByPostcode_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcode_Combined">
      <http:operation location="/ByPostcode_Combined" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcodeFiltered">
      <http:operation location="/ByPostcodeFiltered" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcodeFiltered_DataSet">
      <http:operation location="/ByPostcodeFiltered_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByCoordinates">
      <http:operation location="/ByCoordinates" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByCoordinates_DataSet">
      <http:operation location="/ByCoordinates_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOutcode">
      <http:operation location="/ByOutcode" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOutcode_DataSet">
      <http:operation location="/ByOutcode_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation">
      <http:operation location="/ByOrganisation" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation_DataSet">
      <http:operation location="/ByOrganisation_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation_Combined">
      <http:operation location="/ByOrganisation_Combined" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreet">
      <http:operation location="/ByStreet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreet_Dataset">
      <http:operation location="/ByStreet_Dataset" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetFiltered">
      <http:operation location="/ByStreetFiltered" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetFiltered_Dataset">
      <http:operation location="/ByStreetFiltered_Dataset" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreet_Combined">
      <http:operation location="/ByStreet_Combined" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByBuilding">
      <http:operation location="/ByBuilding" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByBuilding_Dataset">
      <http:operation location="/ByBuilding_Dataset" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByBuilding_Combined">
      <http:operation location="/ByBuilding_Combined" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey">
      <http:operation location="/ByStreetKey" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey_DataSet">
      <http:operation location="/ByStreetKey_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey_Combined">
      <http:operation location="/ByStreetKey_Combined" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByLocalityKey">
      <http:operation location="/ByLocalityKey" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByLocalityKey_DataSet">
      <http:operation location="/ByLocalityKey_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByLocation">
      <http:operation location="/ByLocation" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByLocation_DataSet">
      <http:operation location="/ByLocation_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Location">
      <http:operation location="/Location" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Location_DataSet">
      <http:operation location="/Location_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByFreeText">
      <http:operation location="/ByFreeText" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByFreeText_DataSet">
      <http:operation location="/ByFreeText_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByFreeText_Combined">
      <http:operation location="/ByFreeText_Combined" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FetchAddress_Simple">
      <http:operation location="/FetchAddress_Simple" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FetchAddress">
      <http:operation location="/FetchAddress" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FastAddress">
      <http:operation location="/FastAddress" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FetchAddress_DataSet">
      <http:operation location="/FetchAddress_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FastAddress_DataSet">
      <http:operation location="/FastAddress_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Distance">
      <http:operation location="/Distance" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestPostcode">
      <http:operation location="/NearestPostcode" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestPostcode_DataSet">
      <http:operation location="/NearestPostcode_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Nearest">
      <http:operation location="/Nearest" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Nearest_DataSet">
      <http:operation location="/Nearest_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoredNearest">
      <http:operation location="/StoredNearest" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoredNearest_DataSet">
      <http:operation location="/StoredNearest_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestRadial">
      <http:operation location="/NearestRadial" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestRadial_DataSet">
      <http:operation location="/NearestRadial_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoredNearestRadial">
      <http:operation location="/StoredNearestRadial" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoredNearestRadial_DataSet">
      <http:operation location="/StoredNearestRadial_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Changes">
      <http:operation location="/Changes" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Changes_DataSet">
      <http:operation location="/Changes_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Cleanse">
      <http:operation location="/Cleanse" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Cleanse_DataSet">
      <http:operation location="/Cleanse_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BatchCleanse">
      <http:operation location="/BatchCleanse" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BatchCleanse_DataSet">
      <http:operation location="/BatchCleanse_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BatchFetch">
      <http:operation location="/BatchFetch" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BatchFetch_DataSet">
      <http:operation location="/BatchFetch_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByPostcode">
      <http:operation location="/StatisticsByPostcode" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByPostcode_DataSet">
      <http:operation location="/StatisticsByPostcode_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByOutcode">
      <http:operation location="/StatisticsByOutcode" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByOutcode_DataSet">
      <http:operation location="/StatisticsByOutcode_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsBySector">
      <http:operation location="/StatisticsBySector" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsBySector_DataSet">
      <http:operation location="/StatisticsBySector_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByStreetKey">
      <http:operation location="/StatisticsByStreetKey" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByStreetKey_DataSet">
      <http:operation location="/StatisticsByStreetKey_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestOutcodes">
      <http:operation location="/NearestOutcodes" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestOutcodes_DataSet">
      <http:operation location="/NearestOutcodes_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestSectors">
      <http:operation location="/NearestSectors" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestSectors_DataSet">
      <http:operation location="/NearestSectors_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPoBox">
      <http:operation location="/ByPoBox" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPoBox_DataSet">
      <http:operation location="/ByPoBox_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodePostcode">
      <http:operation location="/GeocodePostcode" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodePostcode_DataSet">
      <http:operation location="/GeocodePostcode_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddressId">
      <http:operation location="/GeocodeAddressId" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddressId_DataSet">
      <http:operation location="/GeocodeAddressId_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddress">
      <http:operation location="/GeocodeAddress" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddress_DataSet">
      <http:operation location="/GeocodeAddress_DataSet" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LookupUKHttpPost" type="tns:LookupUKHttpPost">
    <http:binding verb="POST" />
    <wsdl:operation name="Browse">
      <http:operation location="/Browse" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Browse_DataSet">
      <http:operation location="/Browse_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByArea">
      <http:operation location="/ByArea" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByArea_DataSet">
      <http:operation location="/ByArea_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcode">
      <http:operation location="/ByPostcode" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcode_DataSet">
      <http:operation location="/ByPostcode_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcode_Combined">
      <http:operation location="/ByPostcode_Combined" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcodeFiltered">
      <http:operation location="/ByPostcodeFiltered" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPostcodeFiltered_DataSet">
      <http:operation location="/ByPostcodeFiltered_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByCoordinates">
      <http:operation location="/ByCoordinates" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByCoordinates_DataSet">
      <http:operation location="/ByCoordinates_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOutcode">
      <http:operation location="/ByOutcode" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOutcode_DataSet">
      <http:operation location="/ByOutcode_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation">
      <http:operation location="/ByOrganisation" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation_DataSet">
      <http:operation location="/ByOrganisation_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByOrganisation_Combined">
      <http:operation location="/ByOrganisation_Combined" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreet">
      <http:operation location="/ByStreet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreet_Dataset">
      <http:operation location="/ByStreet_Dataset" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetFiltered">
      <http:operation location="/ByStreetFiltered" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetFiltered_Dataset">
      <http:operation location="/ByStreetFiltered_Dataset" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreet_Combined">
      <http:operation location="/ByStreet_Combined" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByBuilding">
      <http:operation location="/ByBuilding" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByBuilding_Dataset">
      <http:operation location="/ByBuilding_Dataset" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByBuilding_Combined">
      <http:operation location="/ByBuilding_Combined" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey">
      <http:operation location="/ByStreetKey" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey_DataSet">
      <http:operation location="/ByStreetKey_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByStreetKey_Combined">
      <http:operation location="/ByStreetKey_Combined" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByLocalityKey">
      <http:operation location="/ByLocalityKey" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByLocalityKey_DataSet">
      <http:operation location="/ByLocalityKey_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByLocation">
      <http:operation location="/ByLocation" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByLocation_DataSet">
      <http:operation location="/ByLocation_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Location">
      <http:operation location="/Location" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Location_DataSet">
      <http:operation location="/Location_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByFreeText">
      <http:operation location="/ByFreeText" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByFreeText_DataSet">
      <http:operation location="/ByFreeText_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByFreeText_Combined">
      <http:operation location="/ByFreeText_Combined" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FetchAddress_Simple">
      <http:operation location="/FetchAddress_Simple" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FetchAddress">
      <http:operation location="/FetchAddress" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FastAddress">
      <http:operation location="/FastAddress" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FetchAddress_DataSet">
      <http:operation location="/FetchAddress_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FastAddress_DataSet">
      <http:operation location="/FastAddress_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Distance">
      <http:operation location="/Distance" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestPostcode">
      <http:operation location="/NearestPostcode" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestPostcode_DataSet">
      <http:operation location="/NearestPostcode_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Nearest">
      <http:operation location="/Nearest" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Nearest_DataSet">
      <http:operation location="/Nearest_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoredNearest">
      <http:operation location="/StoredNearest" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoredNearest_DataSet">
      <http:operation location="/StoredNearest_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestRadial">
      <http:operation location="/NearestRadial" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestRadial_DataSet">
      <http:operation location="/NearestRadial_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoredNearestRadial">
      <http:operation location="/StoredNearestRadial" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoredNearestRadial_DataSet">
      <http:operation location="/StoredNearestRadial_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Changes">
      <http:operation location="/Changes" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Changes_DataSet">
      <http:operation location="/Changes_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Cleanse">
      <http:operation location="/Cleanse" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Cleanse_DataSet">
      <http:operation location="/Cleanse_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BatchCleanse">
      <http:operation location="/BatchCleanse" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BatchCleanse_DataSet">
      <http:operation location="/BatchCleanse_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BatchFetch">
      <http:operation location="/BatchFetch" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="BatchFetch_DataSet">
      <http:operation location="/BatchFetch_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByPostcode">
      <http:operation location="/StatisticsByPostcode" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByPostcode_DataSet">
      <http:operation location="/StatisticsByPostcode_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByOutcode">
      <http:operation location="/StatisticsByOutcode" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByOutcode_DataSet">
      <http:operation location="/StatisticsByOutcode_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsBySector">
      <http:operation location="/StatisticsBySector" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsBySector_DataSet">
      <http:operation location="/StatisticsBySector_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByStreetKey">
      <http:operation location="/StatisticsByStreetKey" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StatisticsByStreetKey_DataSet">
      <http:operation location="/StatisticsByStreetKey_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestOutcodes">
      <http:operation location="/NearestOutcodes" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestOutcodes_DataSet">
      <http:operation location="/NearestOutcodes_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestSectors">
      <http:operation location="/NearestSectors" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NearestSectors_DataSet">
      <http:operation location="/NearestSectors_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPoBox">
      <http:operation location="/ByPoBox" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ByPoBox_DataSet">
      <http:operation location="/ByPoBox_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodePostcode">
      <http:operation location="/GeocodePostcode" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodePostcode_DataSet">
      <http:operation location="/GeocodePostcode_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddressId">
      <http:operation location="/GeocodeAddressId" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddressId_DataSet">
      <http:operation location="/GeocodeAddressId_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddress">
      <http:operation location="/GeocodeAddress" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GeocodeAddress_DataSet">
      <http:operation location="/GeocodeAddress_DataSet" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LookupUK">
    <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">This web service provides access to all 26 million UK addresses (check out services.postcodeanywhere.co.uk/us/lookup.asmx for US addresses). Before using this service, you should register at www.postcodeanywhere.co.uk for an account code and license key. The MachineId parameter should be blank unless you are using the web service with a user license key (rather than a click / website license key). If you have any queries, call us on +44 (0) 870 241 3310 or email on developers@postcodeanywhere.co.uk</documentation>
    <wsdl:port name="LookupUKSoap" binding="tns:LookupUKSoap">
      <soap:address location="http://services.postcodeanywhere.co.uk/uk/lookup.asmx" />
    </wsdl:port>
    <wsdl:port name="LookupUKHttpGet" binding="tns:LookupUKHttpGet">
      <http:address location="http://services.postcodeanywhere.co.uk/uk/lookup.asmx" />
    </wsdl:port>
    <wsdl:port name="LookupUKHttpPost" binding="tns:LookupUKHttpPost">
      <http:address location="http://services.postcodeanywhere.co.uk/uk/lookup.asmx" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>